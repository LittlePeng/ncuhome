//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1434.
// 
#pragma warning disable 1591

namespace Ncuhome.Blog.Core.ActiveServices {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ActiveServicesSoap", Namespace="http://tempuri.org/")]
    public partial class ActiveServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckSameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFunctionByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParentFiIDByFiidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFunctionByFiIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActiveFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActiveFunctionWithChildFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNotActiveFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetManagerIDByFIIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEncryptFIIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDecryptFIIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOwnerIDByFIIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModIdByFIIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModNameByModIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ActiveServices() {
            this.Url = global::Ncuhome.Blog.Core.Properties.Settings.Default.Blog_Core_ActiveServices_ActiveServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckSameCompletedEventHandler CheckSameCompleted;
        
        /// <remarks/>
        public event GetFunctionByIdCompletedEventHandler GetFunctionByIdCompleted;
        
        /// <remarks/>
        public event GetParentFiIDByFiidCompletedEventHandler GetParentFiIDByFiidCompleted;
        
        /// <remarks/>
        public event GetFunctionByFiIdCompletedEventHandler GetFunctionByFiIdCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event ActiveFunctionCompletedEventHandler ActiveFunctionCompleted;
        
        /// <remarks/>
        public event ActiveFunctionWithChildFunctionCompletedEventHandler ActiveFunctionWithChildFunctionCompleted;
        
        /// <remarks/>
        public event getNotActiveFunctionCompletedEventHandler getNotActiveFunctionCompleted;
        
        /// <remarks/>
        public event getActiveFunctionCompletedEventHandler getActiveFunctionCompleted;
        
        /// <remarks/>
        public event GetManagerIDByFIIDCompletedEventHandler GetManagerIDByFIIDCompleted;
        
        /// <remarks/>
        public event GetEncryptFIIDCompletedEventHandler GetEncryptFIIDCompleted;
        
        /// <remarks/>
        public event GetDecryptFIIDCompletedEventHandler GetDecryptFIIDCompleted;
        
        /// <remarks/>
        public event GetOwnerIDByFIIDCompletedEventHandler GetOwnerIDByFIIDCompleted;
        
        /// <remarks/>
        public event GetModIdByFIIDCompletedEventHandler GetModIdByFIIDCompleted;
        
        /// <remarks/>
        public event GetModNameByModIdCompletedEventHandler GetModNameByModIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckSame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckSame(string MFiid, string AFiid) {
            object[] results = this.Invoke("CheckSame", new object[] {
                        MFiid,
                        AFiid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSameAsync(string MFiid, string AFiid) {
            this.CheckSameAsync(MFiid, AFiid, null);
        }
        
        /// <remarks/>
        public void CheckSameAsync(string MFiid, string AFiid, object userState) {
            if ((this.CheckSameOperationCompleted == null)) {
                this.CheckSameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSameOperationCompleted);
            }
            this.InvokeAsync("CheckSame", new object[] {
                        MFiid,
                        AFiid}, this.CheckSameOperationCompleted, userState);
        }
        
        private void OnCheckSameOperationCompleted(object arg) {
            if ((this.CheckSameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSameCompleted(this, new CheckSameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFunctionById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Func GetFunctionById(int funcId) {
            object[] results = this.Invoke("GetFunctionById", new object[] {
                        funcId});
            return ((Func)(results[0]));
        }
        
        /// <remarks/>
        public void GetFunctionByIdAsync(int funcId) {
            this.GetFunctionByIdAsync(funcId, null);
        }
        
        /// <remarks/>
        public void GetFunctionByIdAsync(int funcId, object userState) {
            if ((this.GetFunctionByIdOperationCompleted == null)) {
                this.GetFunctionByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFunctionByIdOperationCompleted);
            }
            this.InvokeAsync("GetFunctionById", new object[] {
                        funcId}, this.GetFunctionByIdOperationCompleted, userState);
        }
        
        private void OnGetFunctionByIdOperationCompleted(object arg) {
            if ((this.GetFunctionByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFunctionByIdCompleted(this, new GetFunctionByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParentFiIDByFiid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetParentFiIDByFiid(int fiid) {
            object[] results = this.Invoke("GetParentFiIDByFiid", new object[] {
                        fiid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetParentFiIDByFiidAsync(int fiid) {
            this.GetParentFiIDByFiidAsync(fiid, null);
        }
        
        /// <remarks/>
        public void GetParentFiIDByFiidAsync(int fiid, object userState) {
            if ((this.GetParentFiIDByFiidOperationCompleted == null)) {
                this.GetParentFiIDByFiidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentFiIDByFiidOperationCompleted);
            }
            this.InvokeAsync("GetParentFiIDByFiid", new object[] {
                        fiid}, this.GetParentFiIDByFiidOperationCompleted, userState);
        }
        
        private void OnGetParentFiIDByFiidOperationCompleted(object arg) {
            if ((this.GetParentFiIDByFiidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParentFiIDByFiidCompleted(this, new GetParentFiIDByFiidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFunctionByFiId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Func GetFunctionByFiId(int fiId) {
            object[] results = this.Invoke("GetFunctionByFiId", new object[] {
                        fiId});
            return ((Func)(results[0]));
        }
        
        /// <remarks/>
        public void GetFunctionByFiIdAsync(int fiId) {
            this.GetFunctionByFiIdAsync(fiId, null);
        }
        
        /// <remarks/>
        public void GetFunctionByFiIdAsync(int fiId, object userState) {
            if ((this.GetFunctionByFiIdOperationCompleted == null)) {
                this.GetFunctionByFiIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFunctionByFiIdOperationCompleted);
            }
            this.InvokeAsync("GetFunctionByFiId", new object[] {
                        fiId}, this.GetFunctionByFiIdOperationCompleted, userState);
        }
        
        private void OnGetFunctionByFiIdOperationCompleted(object arg) {
            if ((this.GetFunctionByFiIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFunctionByFiIdCompleted(this, new GetFunctionByFiIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActiveFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ActiveFunction(int funcid, int modid, int managerid, int ownerid, string ChildFuncid) {
            object[] results = this.Invoke("ActiveFunction", new object[] {
                        funcid,
                        modid,
                        managerid,
                        ownerid,
                        ChildFuncid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ActiveFunctionAsync(int funcid, int modid, int managerid, int ownerid, string ChildFuncid) {
            this.ActiveFunctionAsync(funcid, modid, managerid, ownerid, ChildFuncid, null);
        }
        
        /// <remarks/>
        public void ActiveFunctionAsync(int funcid, int modid, int managerid, int ownerid, string ChildFuncid, object userState) {
            if ((this.ActiveFunctionOperationCompleted == null)) {
                this.ActiveFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActiveFunctionOperationCompleted);
            }
            this.InvokeAsync("ActiveFunction", new object[] {
                        funcid,
                        modid,
                        managerid,
                        ownerid,
                        ChildFuncid}, this.ActiveFunctionOperationCompleted, userState);
        }
        
        private void OnActiveFunctionOperationCompleted(object arg) {
            if ((this.ActiveFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActiveFunctionCompleted(this, new ActiveFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActiveFunctionWithChildFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveReturnValue ActiveFunctionWithChildFunction(int funcid, int modid, int managerid, int ownerid, string ChildFuncid) {
            object[] results = this.Invoke("ActiveFunctionWithChildFunction", new object[] {
                        funcid,
                        modid,
                        managerid,
                        ownerid,
                        ChildFuncid});
            return ((ActiveReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void ActiveFunctionWithChildFunctionAsync(int funcid, int modid, int managerid, int ownerid, string ChildFuncid) {
            this.ActiveFunctionWithChildFunctionAsync(funcid, modid, managerid, ownerid, ChildFuncid, null);
        }
        
        /// <remarks/>
        public void ActiveFunctionWithChildFunctionAsync(int funcid, int modid, int managerid, int ownerid, string ChildFuncid, object userState) {
            if ((this.ActiveFunctionWithChildFunctionOperationCompleted == null)) {
                this.ActiveFunctionWithChildFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActiveFunctionWithChildFunctionOperationCompleted);
            }
            this.InvokeAsync("ActiveFunctionWithChildFunction", new object[] {
                        funcid,
                        modid,
                        managerid,
                        ownerid,
                        ChildFuncid}, this.ActiveFunctionWithChildFunctionOperationCompleted, userState);
        }
        
        private void OnActiveFunctionWithChildFunctionOperationCompleted(object arg) {
            if ((this.ActiveFunctionWithChildFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActiveFunctionWithChildFunctionCompleted(this, new ActiveFunctionWithChildFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNotActiveFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Func[] getNotActiveFunction(int TXZID) {
            object[] results = this.Invoke("getNotActiveFunction", new object[] {
                        TXZID});
            return ((Func[])(results[0]));
        }
        
        /// <remarks/>
        public void getNotActiveFunctionAsync(int TXZID) {
            this.getNotActiveFunctionAsync(TXZID, null);
        }
        
        /// <remarks/>
        public void getNotActiveFunctionAsync(int TXZID, object userState) {
            if ((this.getNotActiveFunctionOperationCompleted == null)) {
                this.getNotActiveFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNotActiveFunctionOperationCompleted);
            }
            this.InvokeAsync("getNotActiveFunction", new object[] {
                        TXZID}, this.getNotActiveFunctionOperationCompleted, userState);
        }
        
        private void OngetNotActiveFunctionOperationCompleted(object arg) {
            if ((this.getNotActiveFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNotActiveFunctionCompleted(this, new getNotActiveFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getActiveFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Func[] getActiveFunction(int TXZID) {
            object[] results = this.Invoke("getActiveFunction", new object[] {
                        TXZID});
            return ((Func[])(results[0]));
        }
        
        /// <remarks/>
        public void getActiveFunctionAsync(int TXZID) {
            this.getActiveFunctionAsync(TXZID, null);
        }
        
        /// <remarks/>
        public void getActiveFunctionAsync(int TXZID, object userState) {
            if ((this.getActiveFunctionOperationCompleted == null)) {
                this.getActiveFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveFunctionOperationCompleted);
            }
            this.InvokeAsync("getActiveFunction", new object[] {
                        TXZID}, this.getActiveFunctionOperationCompleted, userState);
        }
        
        private void OngetActiveFunctionOperationCompleted(object arg) {
            if ((this.getActiveFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveFunctionCompleted(this, new getActiveFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetManagerIDByFIID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetManagerIDByFIID(int FIID) {
            object[] results = this.Invoke("GetManagerIDByFIID", new object[] {
                        FIID});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetManagerIDByFIIDAsync(int FIID) {
            this.GetManagerIDByFIIDAsync(FIID, null);
        }
        
        /// <remarks/>
        public void GetManagerIDByFIIDAsync(int FIID, object userState) {
            if ((this.GetManagerIDByFIIDOperationCompleted == null)) {
                this.GetManagerIDByFIIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetManagerIDByFIIDOperationCompleted);
            }
            this.InvokeAsync("GetManagerIDByFIID", new object[] {
                        FIID}, this.GetManagerIDByFIIDOperationCompleted, userState);
        }
        
        private void OnGetManagerIDByFIIDOperationCompleted(object arg) {
            if ((this.GetManagerIDByFIIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetManagerIDByFIIDCompleted(this, new GetManagerIDByFIIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEncryptFIID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEncryptFIID(string FIID) {
            object[] results = this.Invoke("GetEncryptFIID", new object[] {
                        FIID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEncryptFIIDAsync(string FIID) {
            this.GetEncryptFIIDAsync(FIID, null);
        }
        
        /// <remarks/>
        public void GetEncryptFIIDAsync(string FIID, object userState) {
            if ((this.GetEncryptFIIDOperationCompleted == null)) {
                this.GetEncryptFIIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEncryptFIIDOperationCompleted);
            }
            this.InvokeAsync("GetEncryptFIID", new object[] {
                        FIID}, this.GetEncryptFIIDOperationCompleted, userState);
        }
        
        private void OnGetEncryptFIIDOperationCompleted(object arg) {
            if ((this.GetEncryptFIIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEncryptFIIDCompleted(this, new GetEncryptFIIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDecryptFIID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDecryptFIID(string FIID) {
            object[] results = this.Invoke("GetDecryptFIID", new object[] {
                        FIID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDecryptFIIDAsync(string FIID) {
            this.GetDecryptFIIDAsync(FIID, null);
        }
        
        /// <remarks/>
        public void GetDecryptFIIDAsync(string FIID, object userState) {
            if ((this.GetDecryptFIIDOperationCompleted == null)) {
                this.GetDecryptFIIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDecryptFIIDOperationCompleted);
            }
            this.InvokeAsync("GetDecryptFIID", new object[] {
                        FIID}, this.GetDecryptFIIDOperationCompleted, userState);
        }
        
        private void OnGetDecryptFIIDOperationCompleted(object arg) {
            if ((this.GetDecryptFIIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDecryptFIIDCompleted(this, new GetDecryptFIIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOwnerIDByFIID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOwnerIDByFIID(int FIID) {
            object[] results = this.Invoke("GetOwnerIDByFIID", new object[] {
                        FIID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOwnerIDByFIIDAsync(int FIID) {
            this.GetOwnerIDByFIIDAsync(FIID, null);
        }
        
        /// <remarks/>
        public void GetOwnerIDByFIIDAsync(int FIID, object userState) {
            if ((this.GetOwnerIDByFIIDOperationCompleted == null)) {
                this.GetOwnerIDByFIIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOwnerIDByFIIDOperationCompleted);
            }
            this.InvokeAsync("GetOwnerIDByFIID", new object[] {
                        FIID}, this.GetOwnerIDByFIIDOperationCompleted, userState);
        }
        
        private void OnGetOwnerIDByFIIDOperationCompleted(object arg) {
            if ((this.GetOwnerIDByFIIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOwnerIDByFIIDCompleted(this, new GetOwnerIDByFIIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetModIdByFIID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetModIdByFIID(int FIID) {
            object[] results = this.Invoke("GetModIdByFIID", new object[] {
                        FIID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetModIdByFIIDAsync(int FIID) {
            this.GetModIdByFIIDAsync(FIID, null);
        }
        
        /// <remarks/>
        public void GetModIdByFIIDAsync(int FIID, object userState) {
            if ((this.GetModIdByFIIDOperationCompleted == null)) {
                this.GetModIdByFIIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModIdByFIIDOperationCompleted);
            }
            this.InvokeAsync("GetModIdByFIID", new object[] {
                        FIID}, this.GetModIdByFIIDOperationCompleted, userState);
        }
        
        private void OnGetModIdByFIIDOperationCompleted(object arg) {
            if ((this.GetModIdByFIIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModIdByFIIDCompleted(this, new GetModIdByFIIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetModNameByModId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetModNameByModId(int moiId) {
            object[] results = this.Invoke("GetModNameByModId", new object[] {
                        moiId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetModNameByModIdAsync(int moiId) {
            this.GetModNameByModIdAsync(moiId, null);
        }
        
        /// <remarks/>
        public void GetModNameByModIdAsync(int moiId, object userState) {
            if ((this.GetModNameByModIdOperationCompleted == null)) {
                this.GetModNameByModIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModNameByModIdOperationCompleted);
            }
            this.InvokeAsync("GetModNameByModId", new object[] {
                        moiId}, this.GetModNameByModIdOperationCompleted, userState);
        }
        
        private void OnGetModNameByModIdOperationCompleted(object arg) {
            if ((this.GetModNameByModIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModNameByModIdCompleted(this, new GetModNameByModIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Func {
        
        private int funcIDField;
        
        private string funcNameField;
        
        /// <remarks/>
        public int FuncID {
            get {
                return this.funcIDField;
            }
            set {
                this.funcIDField = value;
            }
        }
        
        /// <remarks/>
        public string FuncName {
            get {
                return this.funcNameField;
            }
            set {
                this.funcNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Common_FuncImplement {
        
        private int fI_IDField;
        
        private int fI_FuncIDField;
        
        private System.Nullable<int> fI_OwnerIDField;
        
        private System.Nullable<int> fI_MODIDField;
        
        private System.Nullable<bool> fI_ISROOTField;
        
        private System.Nullable<int> fI_PARENTIDField;
        
        /// <remarks/>
        public int FI_ID {
            get {
                return this.fI_IDField;
            }
            set {
                this.fI_IDField = value;
            }
        }
        
        /// <remarks/>
        public int FI_FuncID {
            get {
                return this.fI_FuncIDField;
            }
            set {
                this.fI_FuncIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> FI_OwnerID {
            get {
                return this.fI_OwnerIDField;
            }
            set {
                this.fI_OwnerIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> FI_MODID {
            get {
                return this.fI_MODIDField;
            }
            set {
                this.fI_MODIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> FI_ISROOT {
            get {
                return this.fI_ISROOTField;
            }
            set {
                this.fI_ISROOTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> FI_PARENTID {
            get {
                return this.fI_PARENTIDField;
            }
            set {
                this.fI_PARENTIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ActiveReturnValue {
        
        private int fIIdField;
        
        private Common_FuncImplement[] childFiListField;
        
        /// <remarks/>
        public int FIId {
            get {
                return this.fIIdField;
            }
            set {
                this.fIIdField = value;
            }
        }
        
        /// <remarks/>
        public Common_FuncImplement[] ChildFiList {
            get {
                return this.childFiListField;
            }
            set {
                this.childFiListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void CheckSameCompletedEventHandler(object sender, CheckSameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetFunctionByIdCompletedEventHandler(object sender, GetFunctionByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFunctionByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFunctionByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Func Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Func)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetParentFiIDByFiidCompletedEventHandler(object sender, GetParentFiIDByFiidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParentFiIDByFiidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParentFiIDByFiidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetFunctionByFiIdCompletedEventHandler(object sender, GetFunctionByFiIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFunctionByFiIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFunctionByFiIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Func Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Func)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void ActiveFunctionCompletedEventHandler(object sender, ActiveFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActiveFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActiveFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void ActiveFunctionWithChildFunctionCompletedEventHandler(object sender, ActiveFunctionWithChildFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActiveFunctionWithChildFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActiveFunctionWithChildFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void getNotActiveFunctionCompletedEventHandler(object sender, getNotActiveFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNotActiveFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNotActiveFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Func[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Func[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void getActiveFunctionCompletedEventHandler(object sender, getActiveFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Func[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Func[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetManagerIDByFIIDCompletedEventHandler(object sender, GetManagerIDByFIIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetManagerIDByFIIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetManagerIDByFIIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetEncryptFIIDCompletedEventHandler(object sender, GetEncryptFIIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEncryptFIIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEncryptFIIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetDecryptFIIDCompletedEventHandler(object sender, GetDecryptFIIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDecryptFIIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDecryptFIIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetOwnerIDByFIIDCompletedEventHandler(object sender, GetOwnerIDByFIIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOwnerIDByFIIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOwnerIDByFIIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetModIdByFIIDCompletedEventHandler(object sender, GetModIdByFIIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModIdByFIIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModIdByFIIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetModNameByModIdCompletedEventHandler(object sender, GetModNameByModIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModNameByModIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModNameByModIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591