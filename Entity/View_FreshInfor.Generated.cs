
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace Ncuhome.Blog.Entity 
{
    /// <summary>
    /// The class representing the dbo.View_FreshInfor table.
    /// </summary>
    [Table(Name="dbo.View_FreshInfor")]
    public partial class View_FreshInfor
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="View_FreshInfor"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public View_FreshInfor()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private int _FD_Id;

        /// <summary>
        /// Gets or sets the FD_Id column value.
        /// </summary>
        [Column(Name="FD_Id", Storage="_FD_Id", DbType="Int NOT NULL", CanBeNull=false)]
        public int FD_Id
        {
            get { return _FD_Id; }
            set
            {
                if (_FD_Id != value)
                {
                    OnFD_IdChanging(value);
                    _FD_Id = value;
                    OnFD_IdChanged();
                }
            }
        }
        
        private string _FD_Name;

        /// <summary>
        /// Gets or sets the FD_Name column value.
        /// </summary>
        [Column(Name="FD_Name", Storage="_FD_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
        public string FD_Name
        {
            get { return _FD_Name; }
            set
            {
                if (_FD_Name != value)
                {
                    OnFD_NameChanging(value);
                    _FD_Name = value;
                    OnFD_NameChanged();
                }
            }
        }
        
        private string _FT_Name;

        /// <summary>
        /// Gets or sets the FT_Name column value.
        /// </summary>
        [Column(Name="FT_Name", Storage="_FT_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
        public string FT_Name
        {
            get { return _FT_Name; }
            set
            {
                if (_FT_Name != value)
                {
                    OnFT_NameChanging(value);
                    _FT_Name = value;
                    OnFT_NameChanged();
                }
            }
        }
        
        private int _FT_Id;

        /// <summary>
        /// Gets or sets the FT_Id column value.
        /// </summary>
        [Column(Name="FT_Id", Storage="_FT_Id", DbType="Int NOT NULL", CanBeNull=false)]
        public int FT_Id
        {
            get { return _FT_Id; }
            set
            {
                if (_FT_Id != value)
                {
                    OnFT_IdChanging(value);
                    _FT_Id = value;
                    OnFT_IdChanged();
                }
            }
        }
        
        private int _FC_UserId;

        /// <summary>
        /// Gets or sets the FC_UserId column value.
        /// </summary>
        [Column(Name="FC_UserId", Storage="_FC_UserId", DbType="Int NOT NULL", CanBeNull=false)]
        public int FC_UserId
        {
            get { return _FC_UserId; }
            set
            {
                if (_FC_UserId != value)
                {
                    OnFC_UserIdChanging(value);
                    _FC_UserId = value;
                    OnFC_UserIdChanged();
                }
            }
        }
        
        private string _FC_Title;

        /// <summary>
        /// Gets or sets the FC_Title column value.
        /// </summary>
        [Column(Name="FC_Title", Storage="_FC_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
        public string FC_Title
        {
            get { return _FC_Title; }
            set
            {
                if (_FC_Title != value)
                {
                    OnFC_TitleChanging(value);
                    _FC_Title = value;
                    OnFC_TitleChanged();
                }
            }
        }
        
        private string _FC_Url;

        /// <summary>
        /// Gets or sets the FC_Url column value.
        /// </summary>
        [Column(Name="FC_Url", Storage="_FC_Url", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
        public string FC_Url
        {
            get { return _FC_Url; }
            set
            {
                if (_FC_Url != value)
                {
                    OnFC_UrlChanging(value);
                    _FC_Url = value;
                    OnFC_UrlChanged();
                }
            }
        }
        
        private Nullable<System.DateTime> _FV_VisiteTime;

        /// <summary>
        /// Gets or sets the FV_VisiteTime column value.
        /// </summary>
        [Column(Name="FV_VisiteTime", Storage="_FV_VisiteTime", DbType="DateTime")]
        public Nullable<System.DateTime> FV_VisiteTime
        {
            get { return _FV_VisiteTime; }
            set
            {
                if (_FV_VisiteTime != value)
                {
                    OnFV_VisiteTimeChanging(value);
                    _FV_VisiteTime = value;
                    OnFV_VisiteTimeChanged();
                }
            }
        }
        
        private Nullable<bool> _FV_IsVisite;

        /// <summary>
        /// Gets or sets the FV_IsVisite column value.
        /// </summary>
        [Column(Name="FV_IsVisite", Storage="_FV_IsVisite", DbType="Bit")]
        public Nullable<bool> FV_IsVisite
        {
            get { return _FV_IsVisite; }
            set
            {
                if (_FV_IsVisite != value)
                {
                    OnFV_IsVisiteChanging(value);
                    _FV_IsVisite = value;
                    OnFV_IsVisiteChanged();
                }
            }
        }
        
        private int _FC_Id;

        /// <summary>
        /// Gets or sets the FC_Id column value.
        /// </summary>
        [Column(Name="FC_Id", Storage="_FC_Id", DbType="Int NOT NULL", CanBeNull=false)]
        public int FC_Id
        {
            get { return _FC_Id; }
            set
            {
                if (_FC_Id != value)
                {
                    OnFC_IdChanging(value);
                    _FC_Id = value;
                    OnFC_IdChanged();
                }
            }
        }
        
        private int _FV_FriendUserId;

        /// <summary>
        /// Gets or sets the FV_FriendUserId column value.
        /// </summary>
        [Column(Name="FV_FriendUserId", Storage="_FV_FriendUserId", DbType="Int NOT NULL", CanBeNull=false)]
        public int FV_FriendUserId
        {
            get { return _FV_FriendUserId; }
            set
            {
                if (_FV_FriendUserId != value)
                {
                    OnFV_FriendUserIdChanging(value);
                    _FV_FriendUserId = value;
                    OnFV_FriendUserIdChanged();
                }
            }
        }
        
        private string _User_NickName;

        /// <summary>
        /// Gets or sets the User_NickName column value.
        /// </summary>
        [Column(Name="User_NickName", Storage="_User_NickName", DbType="NVarChar(50)")]
        public string User_NickName
        {
            get { return _User_NickName; }
            set
            {
                if (_User_NickName != value)
                {
                    OnUser_NickNameChanging(value);
                    _User_NickName = value;
                    OnUser_NickNameChanged();
                }
            }
        }
        
        private Nullable<int> _User_TxzId;

        /// <summary>
        /// Gets or sets the User_TxzId column value.
        /// </summary>
        [Column(Name="User_TxzId", Storage="_User_TxzId", DbType="Int")]
        public Nullable<int> User_TxzId
        {
            get { return _User_TxzId; }
            set
            {
                if (_User_TxzId != value)
                {
                    OnUser_TxzIdChanging(value);
                    _User_TxzId = value;
                    OnUser_TxzIdChanged();
                }
            }
        }
        
        private Nullable<int> _User_FIID;

        /// <summary>
        /// Gets or sets the User_FIID column value.
        /// </summary>
        [Column(Name="User_FIID", Storage="_User_FIID", DbType="Int")]
        public Nullable<int> User_FIID
        {
            get { return _User_FIID; }
            set
            {
                if (_User_FIID != value)
                {
                    OnUser_FIIDChanging(value);
                    _User_FIID = value;
                    OnUser_FIIDChanged();
                }
            }
        }
        
        private int _FC_FromUserId;

        /// <summary>
        /// Gets or sets the FC_FromUserId column value.
        /// </summary>
        [Column(Name="FC_FromUserId", Storage="_FC_FromUserId", DbType="Int NOT NULL", CanBeNull=false)]
        public int FC_FromUserId
        {
            get { return _FC_FromUserId; }
            set
            {
                if (_FC_FromUserId != value)
                {
                    OnFC_FromUserIdChanging(value);
                    _FC_FromUserId = value;
                    OnFC_FromUserIdChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when FD_Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFD_IdChanging(int value);
        /// <summary>Called after FD_Id has Changed.</summary>
        partial void OnFD_IdChanged();
        /// <summary>Called when FD_Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFD_NameChanging(string value);
        /// <summary>Called after FD_Name has Changed.</summary>
        partial void OnFD_NameChanged();
        /// <summary>Called when FT_Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFT_NameChanging(string value);
        /// <summary>Called after FT_Name has Changed.</summary>
        partial void OnFT_NameChanged();
        /// <summary>Called when FT_Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFT_IdChanging(int value);
        /// <summary>Called after FT_Id has Changed.</summary>
        partial void OnFT_IdChanged();
        /// <summary>Called when FC_UserId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFC_UserIdChanging(int value);
        /// <summary>Called after FC_UserId has Changed.</summary>
        partial void OnFC_UserIdChanged();
        /// <summary>Called when FC_Title is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFC_TitleChanging(string value);
        /// <summary>Called after FC_Title has Changed.</summary>
        partial void OnFC_TitleChanged();
        /// <summary>Called when FC_Url is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFC_UrlChanging(string value);
        /// <summary>Called after FC_Url has Changed.</summary>
        partial void OnFC_UrlChanged();
        /// <summary>Called when FV_VisiteTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFV_VisiteTimeChanging(Nullable<System.DateTime> value);
        /// <summary>Called after FV_VisiteTime has Changed.</summary>
        partial void OnFV_VisiteTimeChanged();
        /// <summary>Called when FV_IsVisite is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFV_IsVisiteChanging(Nullable<bool> value);
        /// <summary>Called after FV_IsVisite has Changed.</summary>
        partial void OnFV_IsVisiteChanged();
        /// <summary>Called when FC_Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFC_IdChanging(int value);
        /// <summary>Called after FC_Id has Changed.</summary>
        partial void OnFC_IdChanged();
        /// <summary>Called when FV_FriendUserId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFV_FriendUserIdChanging(int value);
        /// <summary>Called after FV_FriendUserId has Changed.</summary>
        partial void OnFV_FriendUserIdChanged();
        /// <summary>Called when User_NickName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_NickNameChanging(string value);
        /// <summary>Called after User_NickName has Changed.</summary>
        partial void OnUser_NickNameChanged();
        /// <summary>Called when User_TxzId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_TxzIdChanging(Nullable<int> value);
        /// <summary>Called after User_TxzId has Changed.</summary>
        partial void OnUser_TxzIdChanged();
        /// <summary>Called when User_FIID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_FIIDChanging(Nullable<int> value);
        /// <summary>Called after User_FIID has Changed.</summary>
        partial void OnUser_FIIDChanged();
        /// <summary>Called when FC_FromUserId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFC_FromUserIdChanging(int value);
        /// <summary>Called after FC_FromUserId has Changed.</summary>
        partial void OnFC_FromUserIdChanged();
        #endregion
        
    }
}

