
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace Ncuhome.Blog.Entity 
{
    /// <summary>
    /// The class representing the dbo.Weblog_FreshVisit table.
    /// </summary>
    [Table(Name="dbo.Weblog_FreshVisit")]
    public partial class Weblog_FreshVisit
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Weblog_FreshVisit"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Weblog_FreshVisit()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private int _FV_Id = default(int);

        /// <summary>
        /// Gets the FV_Id column value.
        /// </summary>
        [Column(Name="FV_Id", Storage="_FV_Id", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public int FV_Id
        {
            get { return _FV_Id; }
            set
            {
                if (_FV_Id != value)
                {
                    OnFV_IdChanging(value);
                    _FV_Id = value;
                    OnFV_IdChanged();
                }
            }
        }
        
        private int _FV_FCId;

        /// <summary>
        /// Gets or sets the FV_FCId column value.
        /// </summary>
        [Column(Name="FV_FCId", Storage="_FV_FCId", DbType="Int NOT NULL", CanBeNull=false)]
        public int FV_FCId
        {
            get { return _FV_FCId; }
            set
            {
                if (_FV_FCId != value)
                {
                    OnFV_FCIdChanging(value);
                    _FV_FCId = value;
                    OnFV_FCIdChanged();
                }
            }
        }
        
        private int _FV_FriendUserId;

        /// <summary>
        /// Gets or sets the FV_FriendUserId column value.
        /// </summary>
        [Column(Name="FV_FriendUserId", Storage="_FV_FriendUserId", DbType="Int NOT NULL", CanBeNull=false)]
        public int FV_FriendUserId
        {
            get { return _FV_FriendUserId; }
            set
            {
                if (_FV_FriendUserId != value)
                {
                    OnFV_FriendUserIdChanging(value);
                    _FV_FriendUserId = value;
                    OnFV_FriendUserIdChanged();
                }
            }
        }
        
        private Nullable<System.DateTime> _FV_VisiteTime;

        /// <summary>
        /// Gets or sets the FV_VisiteTime column value.
        /// </summary>
        [Column(Name="FV_VisiteTime", Storage="_FV_VisiteTime", DbType="DateTime")]
        public Nullable<System.DateTime> FV_VisiteTime
        {
            get { return _FV_VisiteTime; }
            set
            {
                if (_FV_VisiteTime != value)
                {
                    OnFV_VisiteTimeChanging(value);
                    _FV_VisiteTime = value;
                    OnFV_VisiteTimeChanged();
                }
            }
        }
        
        private Nullable<bool> _FV_IsVisite;

        /// <summary>
        /// Gets or sets the FV_IsVisite column value.
        /// </summary>
        [Column(Name="FV_IsVisite", Storage="_FV_IsVisite", DbType="Bit")]
        public Nullable<bool> FV_IsVisite
        {
            get { return _FV_IsVisite; }
            set
            {
                if (_FV_IsVisite != value)
                {
                    OnFV_IsVisiteChanging(value);
                    _FV_IsVisite = value;
                    OnFV_IsVisiteChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when FV_Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFV_IdChanging(int value);
        /// <summary>Called after FV_Id has Changed.</summary>
        partial void OnFV_IdChanged();
        /// <summary>Called when FV_FCId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFV_FCIdChanging(int value);
        /// <summary>Called after FV_FCId has Changed.</summary>
        partial void OnFV_FCIdChanged();
        /// <summary>Called when FV_FriendUserId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFV_FriendUserIdChanging(int value);
        /// <summary>Called after FV_FriendUserId has Changed.</summary>
        partial void OnFV_FriendUserIdChanged();
        /// <summary>Called when FV_VisiteTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFV_VisiteTimeChanging(Nullable<System.DateTime> value);
        /// <summary>Called after FV_VisiteTime has Changed.</summary>
        partial void OnFV_VisiteTimeChanged();
        /// <summary>Called when FV_IsVisite is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFV_IsVisiteChanging(Nullable<bool> value);
        /// <summary>Called after FV_IsVisite has Changed.</summary>
        partial void OnFV_IsVisiteChanged();
        #endregion
        
    }
}

