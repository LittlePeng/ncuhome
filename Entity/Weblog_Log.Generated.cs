
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace Ncuhome.Blog.Entity
{
    /// <summary>
    /// The class representing the dbo.Weblog_Log table.
    /// </summary>
    [Table(Name="dbo.Weblog_Log")]
    public partial class Weblog_Log
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Weblog_Log"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Weblog_Log()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private int _Log_Id = default(int);

        /// <summary>
        /// Gets the Log_Id column value.
        /// </summary>
        [Column(Name="Log_Id", Storage="_Log_Id", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public int Log_Id
        {
            get { return _Log_Id; }
            set
            {
                if (_Log_Id != value)
                {
                    OnLog_IdChanging(value);
                    _Log_Id = value;
                    OnLog_IdChanged();
                }
            }
        }
        
        private Nullable<int> _Log_UserId;

        /// <summary>
        /// Gets or sets the Log_UserId column value.
        /// </summary>
        [Column(Name="Log_UserId", Storage="_Log_UserId", DbType="Int")]
        public Nullable<int> Log_UserId
        {
            get { return _Log_UserId; }
            set
            {
                if (_Log_UserId != value)
                {
                    OnLog_UserIdChanging(value);
                    _Log_UserId = value;
                    OnLog_UserIdChanged();
                }
            }
        }
        
        private string _Log_Title;

        /// <summary>
        /// Gets or sets the Log_Title column value.
        /// </summary>
        [Column(Name="Log_Title", Storage="_Log_Title", DbType="NVarChar(255)")]
        public string Log_Title
        {
            get { return _Log_Title; }
            set
            {
                if (_Log_Title != value)
                {
                    OnLog_TitleChanging(value);
                    _Log_Title = value;
                    OnLog_TitleChanged();
                }
            }
        }
        
        private string _Log_Content;

        /// <summary>
        /// Gets or sets the Log_Content column value.
        /// </summary>
        [Column(Name="Log_Content", Storage="_Log_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
        public string Log_Content
        {
            get { return _Log_Content; }
            set
            {
                if (_Log_Content != value)
                {
                    OnLog_ContentChanging(value);
                    _Log_Content = value;
                    OnLog_ContentChanged();
                }
            }
        }
        
        private Nullable<int> _Log_Class;

        /// <summary>
        /// Gets or sets the Log_Class column value.
        /// </summary>
        [Column(Name="Log_Class", Storage="_Log_Class", DbType="Int")]
        public Nullable<int> Log_Class
        {
            get { return _Log_Class; }
            set
            {
                if (_Log_Class != value)
                {
                    OnLog_ClassChanging(value);
                    _Log_Class = value;
                    OnLog_ClassChanged();
                }
            }
        }
        
        private System.DateTime _Log_CreateTime;

        /// <summary>
        /// Gets or sets the Log_CreateTime column value.
        /// </summary>
        [Column(Name="Log_CreateTime", Storage="_Log_CreateTime", DbType="DateTime NOT NULL", CanBeNull=false)]
        public System.DateTime Log_CreateTime
        {
            get { return _Log_CreateTime; }
            set
            {
                if (_Log_CreateTime != value)
                {
                    OnLog_CreateTimeChanging(value);
                    _Log_CreateTime = value;
                    OnLog_CreateTimeChanged();
                }
            }
        }
        
        private System.DateTime _Log_LastModiTime;

        /// <summary>
        /// Gets or sets the Log_LastModiTime column value.
        /// </summary>
        [Column(Name="Log_LastModiTime", Storage="_Log_LastModiTime", DbType="DateTime NOT NULL", CanBeNull=false)]
        public System.DateTime Log_LastModiTime
        {
            get { return _Log_LastModiTime; }
            set
            {
                if (_Log_LastModiTime != value)
                {
                    OnLog_LastModiTimeChanging(value);
                    _Log_LastModiTime = value;
                    OnLog_LastModiTimeChanged();
                }
            }
        }
        
        private Nullable<int> _Log_ViewCount;

        /// <summary>
        /// Gets or sets the Log_ViewCount column value.
        /// </summary>
        [Column(Name="Log_ViewCount", Storage="_Log_ViewCount", DbType="Int")]
        public Nullable<int> Log_ViewCount
        {
            get { return _Log_ViewCount; }
            set
            {
                if (_Log_ViewCount != value)
                {
                    OnLog_ViewCountChanging(value);
                    _Log_ViewCount = value;
                    OnLog_ViewCountChanged();
                }
            }
        }
        
        private Nullable<int> _Log_CommentCount;

        /// <summary>
        /// Gets or sets the Log_CommentCount column value.
        /// </summary>
        [Column(Name="Log_CommentCount", Storage="_Log_CommentCount", DbType="Int")]
        public Nullable<int> Log_CommentCount
        {
            get { return _Log_CommentCount; }
            set
            {
                if (_Log_CommentCount != value)
                {
                    OnLog_CommentCountChanging(value);
                    _Log_CommentCount = value;
                    OnLog_CommentCountChanged();
                }
            }
        }
        
        private Nullable<int> _Log_RecommendCount;

        /// <summary>
        /// Gets or sets the Log_RecommendCount column value.
        /// </summary>
        [Column(Name="Log_RecommendCount", Storage="_Log_RecommendCount", DbType="Int")]
        public Nullable<int> Log_RecommendCount
        {
            get { return _Log_RecommendCount; }
            set
            {
                if (_Log_RecommendCount != value)
                {
                    OnLog_RecommendCountChanging(value);
                    _Log_RecommendCount = value;
                    OnLog_RecommendCountChanged();
                }
            }
        }
        
        private Nullable<bool> _Log_IsVisible;

        /// <summary>
        /// Gets or sets the Log_IsVisible column value.
        /// </summary>
        [Column(Name="Log_IsVisible", Storage="_Log_IsVisible", DbType="Bit")]
        public Nullable<bool> Log_IsVisible
        {
            get { return _Log_IsVisible; }
            set
            {
                if (_Log_IsVisible != value)
                {
                    OnLog_IsVisibleChanging(value);
                    _Log_IsVisible = value;
                    OnLog_IsVisibleChanged();
                }
            }
        }
        
        private Nullable<bool> _Log_IsDraft;

        /// <summary>
        /// Gets or sets the Log_IsDraft column value.
        /// </summary>
        [Column(Name="Log_IsDraft", Storage="_Log_IsDraft", DbType="Bit")]
        public Nullable<bool> Log_IsDraft
        {
            get { return _Log_IsDraft; }
            set
            {
                if (_Log_IsDraft != value)
                {
                    OnLog_IsDraftChanging(value);
                    _Log_IsDraft = value;
                    OnLog_IsDraftChanged();
                }
            }
        }
        
        private string _Log_IP;

        /// <summary>
        /// Gets or sets the Log_IP column value.
        /// </summary>
        [Column(Name="Log_IP", Storage="_Log_IP", DbType="VarChar(15)")]
        public string Log_IP
        {
            get { return _Log_IP; }
            set
            {
                if (_Log_IP != value)
                {
                    OnLog_IPChanging(value);
                    _Log_IP = value;
                    OnLog_IPChanged();
                }
            }
        }
        
        private Nullable<bool> _Log_IsEnRePly;

        /// <summary>
        /// Gets or sets the Log_IsEnRePly column value.
        /// </summary>
        [Column(Name="Log_IsEnRePly", Storage="_Log_IsEnRePly", DbType="Bit")]
        public Nullable<bool> Log_IsEnRePly
        {
            get { return _Log_IsEnRePly; }
            set
            {
                if (_Log_IsEnRePly != value)
                {
                    OnLog_IsEnRePlyChanging(value);
                    _Log_IsEnRePly = value;
                    OnLog_IsEnRePlyChanged();
                }
            }
        }
        
        private Nullable<bool> _Log_IsTop;

        /// <summary>
        /// Gets or sets the Log_IsTop column value.
        /// </summary>
        [Column(Name="Log_IsTop", Storage="_Log_IsTop", DbType="Bit")]
        public Nullable<bool> Log_IsTop
        {
            get { return _Log_IsTop; }
            set
            {
                if (_Log_IsTop != value)
                {
                    OnLog_IsTopChanging(value);
                    _Log_IsTop = value;
                    OnLog_IsTopChanged();
                }
            }
        }
        
        private Nullable<int> _Log_tempUserID;

        /// <summary>
        /// Gets or sets the Log_tempUserID column value.
        /// </summary>
        [Column(Name="Log_tempUserID", Storage="_Log_tempUserID", DbType="Int")]
        public Nullable<int> Log_tempUserID
        {
            get { return _Log_tempUserID; }
            set
            {
                if (_Log_tempUserID != value)
                {
                    OnLog_tempUserIDChanging(value);
                    _Log_tempUserID = value;
                    OnLog_tempUserIDChanged();
                }
            }
        }
        
        private Nullable<int> _Log_TempID;

        /// <summary>
        /// Gets or sets the Log_TempID column value.
        /// </summary>
        [Column(Name="Log_TempID", Storage="_Log_TempID", DbType="Int")]
        public Nullable<int> Log_TempID
        {
            get { return _Log_TempID; }
            set
            {
                if (_Log_TempID != value)
                {
                    OnLog_TempIDChanging(value);
                    _Log_TempID = value;
                    OnLog_TempIDChanged();
                }
            }
        }
        
        private Nullable<bool> _Log_IsPasssword;

        /// <summary>
        /// Gets or sets the Log_IsPasssword column value.
        /// </summary>
        [Column(Name="Log_IsPasssword", Storage="_Log_IsPasssword", DbType="Bit")]
        public Nullable<bool> Log_IsPasssword
        {
            get { return _Log_IsPasssword; }
            set
            {
                if (_Log_IsPasssword != value)
                {
                    OnLog_IsPassswordChanging(value);
                    _Log_IsPasssword = value;
                    OnLog_IsPassswordChanged();
                }
            }
        }
        
        private string _Log_PassWord;

        /// <summary>
        /// Gets or sets the Log_PassWord column value.
        /// </summary>
        [Column(Name="Log_PassWord", Storage="_Log_PassWord", DbType="NVarChar(50)")]
        public string Log_PassWord
        {
            get { return _Log_PassWord; }
            set
            {
                if (_Log_PassWord != value)
                {
                    OnLog_PassWordChanging(value);
                    _Log_PassWord = value;
                    OnLog_PassWordChanged();
                }
            }
        }
        
        private Nullable<int> _Log_CateId;

        /// <summary>
        /// Gets or sets the Log_CateId column value.
        /// </summary>
        [Column(Name="Log_CateId", Storage="_Log_CateId", DbType="Int")]
        public Nullable<int> Log_CateId
        {
            get { return _Log_CateId; }
            set
            {
                if (_Log_CateId != value)
                {
                    OnLog_CateIdChanging(value);
                    _Log_CateId = value;
                    OnLog_CateIdChanged();
                }
            }
        }
        
        private string _Log_KeyWords;

        /// <summary>
        /// Gets or sets the Log_KeyWords column value.
        /// </summary>
        [Column(Name="Log_KeyWords", Storage="_Log_KeyWords", DbType="NVarChar(100)")]
        public string Log_KeyWords
        {
            get { return _Log_KeyWords; }
            set
            {
                if (_Log_KeyWords != value)
                {
                    OnLog_KeyWordsChanging(value);
                    _Log_KeyWords = value;
                    OnLog_KeyWordsChanged();
                }
            }
        }
        
        private Nullable<bool> _Log_AllowComment;

        /// <summary>
        /// Gets or sets the Log_AllowComment column value.
        /// </summary>
        [Column(Name="Log_AllowComment", Storage="_Log_AllowComment", DbType="Bit")]
        public Nullable<bool> Log_AllowComment
        {
            get { return _Log_AllowComment; }
            set
            {
                if (_Log_AllowComment != value)
                {
                    OnLog_AllowCommentChanging(value);
                    _Log_AllowComment = value;
                    OnLog_AllowCommentChanged();
                }
            }
        }
        
        private Nullable<bool> _Log_IsIndexShow;

        /// <summary>
        /// Gets or sets the Log_IsIndexShow column value.
        /// </summary>
        [Column(Name="Log_IsIndexShow", Storage="_Log_IsIndexShow", DbType="Bit")]
        public Nullable<bool> Log_IsIndexShow
        {
            get { return _Log_IsIndexShow; }
            set
            {
                if (_Log_IsIndexShow != value)
                {
                    OnLog_IsIndexShowChanging(value);
                    _Log_IsIndexShow = value;
                    OnLog_IsIndexShowChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Log_Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IdChanging(int value);
        /// <summary>Called after Log_Id has Changed.</summary>
        partial void OnLog_IdChanged();
        /// <summary>Called when Log_UserId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_UserIdChanging(Nullable<int> value);
        /// <summary>Called after Log_UserId has Changed.</summary>
        partial void OnLog_UserIdChanged();
        /// <summary>Called when Log_Title is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_TitleChanging(string value);
        /// <summary>Called after Log_Title has Changed.</summary>
        partial void OnLog_TitleChanged();
        /// <summary>Called when Log_Content is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_ContentChanging(string value);
        /// <summary>Called after Log_Content has Changed.</summary>
        partial void OnLog_ContentChanged();
        /// <summary>Called when Log_Class is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_ClassChanging(Nullable<int> value);
        /// <summary>Called after Log_Class has Changed.</summary>
        partial void OnLog_ClassChanged();
        /// <summary>Called when Log_CreateTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_CreateTimeChanging(System.DateTime value);
        /// <summary>Called after Log_CreateTime has Changed.</summary>
        partial void OnLog_CreateTimeChanged();
        /// <summary>Called when Log_LastModiTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_LastModiTimeChanging(System.DateTime value);
        /// <summary>Called after Log_LastModiTime has Changed.</summary>
        partial void OnLog_LastModiTimeChanged();
        /// <summary>Called when Log_ViewCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_ViewCountChanging(Nullable<int> value);
        /// <summary>Called after Log_ViewCount has Changed.</summary>
        partial void OnLog_ViewCountChanged();
        /// <summary>Called when Log_CommentCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_CommentCountChanging(Nullable<int> value);
        /// <summary>Called after Log_CommentCount has Changed.</summary>
        partial void OnLog_CommentCountChanged();
        /// <summary>Called when Log_RecommendCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_RecommendCountChanging(Nullable<int> value);
        /// <summary>Called after Log_RecommendCount has Changed.</summary>
        partial void OnLog_RecommendCountChanged();
        /// <summary>Called when Log_IsVisible is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IsVisibleChanging(Nullable<bool> value);
        /// <summary>Called after Log_IsVisible has Changed.</summary>
        partial void OnLog_IsVisibleChanged();
        /// <summary>Called when Log_IsDraft is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IsDraftChanging(Nullable<bool> value);
        /// <summary>Called after Log_IsDraft has Changed.</summary>
        partial void OnLog_IsDraftChanged();
        /// <summary>Called when Log_IP is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IPChanging(string value);
        /// <summary>Called after Log_IP has Changed.</summary>
        partial void OnLog_IPChanged();
        /// <summary>Called when Log_IsEnRePly is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IsEnRePlyChanging(Nullable<bool> value);
        /// <summary>Called after Log_IsEnRePly has Changed.</summary>
        partial void OnLog_IsEnRePlyChanged();
        /// <summary>Called when Log_IsTop is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IsTopChanging(Nullable<bool> value);
        /// <summary>Called after Log_IsTop has Changed.</summary>
        partial void OnLog_IsTopChanged();
        /// <summary>Called when Log_tempUserID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_tempUserIDChanging(Nullable<int> value);
        /// <summary>Called after Log_tempUserID has Changed.</summary>
        partial void OnLog_tempUserIDChanged();
        /// <summary>Called when Log_TempID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_TempIDChanging(Nullable<int> value);
        /// <summary>Called after Log_TempID has Changed.</summary>
        partial void OnLog_TempIDChanged();
        /// <summary>Called when Log_IsPasssword is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IsPassswordChanging(Nullable<bool> value);
        /// <summary>Called after Log_IsPasssword has Changed.</summary>
        partial void OnLog_IsPassswordChanged();
        /// <summary>Called when Log_PassWord is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_PassWordChanging(string value);
        /// <summary>Called after Log_PassWord has Changed.</summary>
        partial void OnLog_PassWordChanged();
        /// <summary>Called when Log_CateId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_CateIdChanging(Nullable<int> value);
        /// <summary>Called after Log_CateId has Changed.</summary>
        partial void OnLog_CateIdChanged();
        /// <summary>Called when Log_KeyWords is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_KeyWordsChanging(string value);
        /// <summary>Called after Log_KeyWords has Changed.</summary>
        partial void OnLog_KeyWordsChanged();
        /// <summary>Called when Log_AllowComment is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_AllowCommentChanging(Nullable<bool> value);
        /// <summary>Called after Log_AllowComment has Changed.</summary>
        partial void OnLog_AllowCommentChanged();
        /// <summary>Called when Log_IsIndexShow is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IsIndexShowChanging(Nullable<bool> value);
        /// <summary>Called after Log_IsIndexShow has Changed.</summary>
        partial void OnLog_IsIndexShowChanged();
        #endregion
        
    }
}

