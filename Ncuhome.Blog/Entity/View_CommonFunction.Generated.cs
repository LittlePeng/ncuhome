
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace Ncuhome.Blog.Entity 
{
    /// <summary>
    /// The class representing the dbo.View_CommonFunction table.
    /// </summary>
    [Table(Name="dbo.View_CommonFunction")]
    public partial class View_CommonFunction
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="View_CommonFunction"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public View_CommonFunction()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private int _Mod_ID;

        /// <summary>
        /// Gets or sets the Mod_ID column value.
        /// </summary>
        [Column(Name="Mod_ID", Storage="_Mod_ID", DbType="Int NOT NULL", CanBeNull=false)]
        public int Mod_ID
        {
            get { return _Mod_ID; }
            set
            {
                if (_Mod_ID != value)
                {
                    OnMod_IDChanging(value);
                    _Mod_ID = value;
                    OnMod_IDChanged();
                }
            }
        }
        
        private string _Mod_Name;

        /// <summary>
        /// Gets or sets the Mod_Name column value.
        /// </summary>
        [Column(Name="Mod_Name", Storage="_Mod_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
        public string Mod_Name
        {
            get { return _Mod_Name; }
            set
            {
                if (_Mod_Name != value)
                {
                    OnMod_NameChanging(value);
                    _Mod_Name = value;
                    OnMod_NameChanged();
                }
            }
        }
        
        private int _FI_ID;

        /// <summary>
        /// Gets or sets the FI_ID column value.
        /// </summary>
        [Column(Name="FI_ID", Storage="_FI_ID", DbType="Int NOT NULL", CanBeNull=false)]
        public int FI_ID
        {
            get { return _FI_ID; }
            set
            {
                if (_FI_ID != value)
                {
                    OnFI_IDChanging(value);
                    _FI_ID = value;
                    OnFI_IDChanged();
                }
            }
        }
        
        private int _FI_FuncID;

        /// <summary>
        /// Gets or sets the FI_FuncID column value.
        /// </summary>
        [Column(Name="FI_FuncID", Storage="_FI_FuncID", DbType="Int NOT NULL", CanBeNull=false)]
        public int FI_FuncID
        {
            get { return _FI_FuncID; }
            set
            {
                if (_FI_FuncID != value)
                {
                    OnFI_FuncIDChanging(value);
                    _FI_FuncID = value;
                    OnFI_FuncIDChanged();
                }
            }
        }
        
        private Nullable<int> _FI_OwnerID;

        /// <summary>
        /// Gets or sets the FI_OwnerID column value.
        /// </summary>
        [Column(Name="FI_OwnerID", Storage="_FI_OwnerID", DbType="Int")]
        public Nullable<int> FI_OwnerID
        {
            get { return _FI_OwnerID; }
            set
            {
                if (_FI_OwnerID != value)
                {
                    OnFI_OwnerIDChanging(value);
                    _FI_OwnerID = value;
                    OnFI_OwnerIDChanged();
                }
            }
        }
        
        private Nullable<int> _FI_MODID;

        /// <summary>
        /// Gets or sets the FI_MODID column value.
        /// </summary>
        [Column(Name="FI_MODID", Storage="_FI_MODID", DbType="Int")]
        public Nullable<int> FI_MODID
        {
            get { return _FI_MODID; }
            set
            {
                if (_FI_MODID != value)
                {
                    OnFI_MODIDChanging(value);
                    _FI_MODID = value;
                    OnFI_MODIDChanged();
                }
            }
        }
        
        private string _Func_Name;

        /// <summary>
        /// Gets or sets the Func_Name column value.
        /// </summary>
        [Column(Name="Func_Name", Storage="_Func_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
        public string Func_Name
        {
            get { return _Func_Name; }
            set
            {
                if (_Func_Name != value)
                {
                    OnFunc_NameChanging(value);
                    _Func_Name = value;
                    OnFunc_NameChanged();
                }
            }
        }
        
        private long _Func_ID;

        /// <summary>
        /// Gets or sets the Func_ID column value.
        /// </summary>
        [Column(Name="Func_ID", Storage="_Func_ID", DbType="BigInt NOT NULL", CanBeNull=false)]
        public long Func_ID
        {
            get { return _Func_ID; }
            set
            {
                if (_Func_ID != value)
                {
                    OnFunc_IDChanging(value);
                    _Func_ID = value;
                    OnFunc_IDChanged();
                }
            }
        }
        
        private Nullable<bool> _FUNC_ISROOT;

        /// <summary>
        /// Gets or sets the FUNC_ISROOT column value.
        /// </summary>
        [Column(Name="FUNC_ISROOT", Storage="_FUNC_ISROOT", DbType="Bit")]
        public Nullable<bool> FUNC_ISROOT
        {
            get { return _FUNC_ISROOT; }
            set
            {
                if (_FUNC_ISROOT != value)
                {
                    OnFUNC_ISROOTChanging(value);
                    _FUNC_ISROOT = value;
                    OnFUNC_ISROOTChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Mod_ID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnMod_IDChanging(int value);
        /// <summary>Called after Mod_ID has Changed.</summary>
        partial void OnMod_IDChanged();
        /// <summary>Called when Mod_Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnMod_NameChanging(string value);
        /// <summary>Called after Mod_Name has Changed.</summary>
        partial void OnMod_NameChanged();
        /// <summary>Called when FI_ID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFI_IDChanging(int value);
        /// <summary>Called after FI_ID has Changed.</summary>
        partial void OnFI_IDChanged();
        /// <summary>Called when FI_FuncID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFI_FuncIDChanging(int value);
        /// <summary>Called after FI_FuncID has Changed.</summary>
        partial void OnFI_FuncIDChanged();
        /// <summary>Called when FI_OwnerID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFI_OwnerIDChanging(Nullable<int> value);
        /// <summary>Called after FI_OwnerID has Changed.</summary>
        partial void OnFI_OwnerIDChanged();
        /// <summary>Called when FI_MODID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFI_MODIDChanging(Nullable<int> value);
        /// <summary>Called after FI_MODID has Changed.</summary>
        partial void OnFI_MODIDChanged();
        /// <summary>Called when Func_Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFunc_NameChanging(string value);
        /// <summary>Called after Func_Name has Changed.</summary>
        partial void OnFunc_NameChanged();
        /// <summary>Called when Func_ID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFunc_IDChanging(long value);
        /// <summary>Called after Func_ID has Changed.</summary>
        partial void OnFunc_IDChanged();
        /// <summary>Called when FUNC_ISROOT is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFUNC_ISROOTChanging(Nullable<bool> value);
        /// <summary>Called after FUNC_ISROOT has Changed.</summary>
        partial void OnFUNC_ISROOTChanged();
        #endregion
        
    }
}

