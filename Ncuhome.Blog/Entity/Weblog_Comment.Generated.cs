
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace Ncuhome.Blog.Entity 
{
    /// <summary>
    /// The class representing the dbo.Weblog_Comment table.
    /// </summary>
    [Table(Name="dbo.Weblog_Comment")]
    public partial class Weblog_Comment
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Weblog_Comment"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Weblog_Comment()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private int _Comment_Id = default(int);

        /// <summary>
        /// Gets the Comment_Id column value.
        /// </summary>
        [Column(Name="Comment_Id", Storage="_Comment_Id", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public int Comment_Id
        {
            get { return _Comment_Id; }
            set
            {
                if (_Comment_Id != value)
                {
                    OnComment_IdChanging(value);
                    _Comment_Id = value;
                    OnComment_IdChanged();
                }
            }
        }
        
        private Nullable<int> _Comment_UserId;

        /// <summary>
        /// Gets or sets the Comment_UserId column value.
        /// </summary>
        [Column(Name="Comment_UserId", Storage="_Comment_UserId", DbType="Int")]
        public Nullable<int> Comment_UserId
        {
            get { return _Comment_UserId; }
            set
            {
                if (_Comment_UserId != value)
                {
                    OnComment_UserIdChanging(value);
                    _Comment_UserId = value;
                    OnComment_UserIdChanged();
                }
            }
        }
        
        private Nullable<int> _Comment_LogId;

        /// <summary>
        /// Gets or sets the Comment_LogId column value.
        /// </summary>
        [Column(Name="Comment_LogId", Storage="_Comment_LogId", DbType="Int")]
        public Nullable<int> Comment_LogId
        {
            get { return _Comment_LogId; }
            set
            {
                if (_Comment_LogId != value)
                {
                    OnComment_LogIdChanging(value);
                    _Comment_LogId = value;
                    OnComment_LogIdChanged();
                }
            }
        }
        
        private string _Comment_Content;

        /// <summary>
        /// Gets or sets the Comment_Content column value.
        /// </summary>
        [Column(Name="Comment_Content", Storage="_Comment_Content", DbType="NVarChar(MAX)")]
        public string Comment_Content
        {
            get { return _Comment_Content; }
            set
            {
                if (_Comment_Content != value)
                {
                    OnComment_ContentChanging(value);
                    _Comment_Content = value;
                    OnComment_ContentChanged();
                }
            }
        }
        
        private Nullable<int> _Comment_ToCommentId;

        /// <summary>
        /// Gets or sets the Comment_ToCommentId column value.
        /// </summary>
        [Column(Name="Comment_ToCommentId", Storage="_Comment_ToCommentId", DbType="Int")]
        public Nullable<int> Comment_ToCommentId
        {
            get { return _Comment_ToCommentId; }
            set
            {
                if (_Comment_ToCommentId != value)
                {
                    OnComment_ToCommentIdChanging(value);
                    _Comment_ToCommentId = value;
                    OnComment_ToCommentIdChanged();
                }
            }
        }
        
        private Nullable<System.DateTime> _Comment_CreateTime;

        /// <summary>
        /// Gets or sets the Comment_CreateTime column value.
        /// </summary>
        [Column(Name="Comment_CreateTime", Storage="_Comment_CreateTime", DbType="DateTime")]
        public Nullable<System.DateTime> Comment_CreateTime
        {
            get { return _Comment_CreateTime; }
            set
            {
                if (_Comment_CreateTime != value)
                {
                    OnComment_CreateTimeChanging(value);
                    _Comment_CreateTime = value;
                    OnComment_CreateTimeChanged();
                }
            }
        }
        
        private Nullable<System.DateTime> _Comment_LastModiTime;

        /// <summary>
        /// Gets or sets the Comment_LastModiTime column value.
        /// </summary>
        [Column(Name="Comment_LastModiTime", Storage="_Comment_LastModiTime", DbType="DateTime")]
        public Nullable<System.DateTime> Comment_LastModiTime
        {
            get { return _Comment_LastModiTime; }
            set
            {
                if (_Comment_LastModiTime != value)
                {
                    OnComment_LastModiTimeChanging(value);
                    _Comment_LastModiTime = value;
                    OnComment_LastModiTimeChanged();
                }
            }
        }
        
        private Nullable<int> _Comment_LogTempId;

        /// <summary>
        /// Gets or sets the Comment_LogTempId column value.
        /// </summary>
        [Column(Name="Comment_LogTempId", Storage="_Comment_LogTempId", DbType="Int")]
        public Nullable<int> Comment_LogTempId
        {
            get { return _Comment_LogTempId; }
            set
            {
                if (_Comment_LogTempId != value)
                {
                    OnComment_LogTempIdChanging(value);
                    _Comment_LogTempId = value;
                    OnComment_LogTempIdChanged();
                }
            }
        }
        
        private Nullable<int> _Comment_UserTempId;

        /// <summary>
        /// Gets or sets the Comment_UserTempId column value.
        /// </summary>
        [Column(Name="Comment_UserTempId", Storage="_Comment_UserTempId", DbType="Int")]
        public Nullable<int> Comment_UserTempId
        {
            get { return _Comment_UserTempId; }
            set
            {
                if (_Comment_UserTempId != value)
                {
                    OnComment_UserTempIdChanging(value);
                    _Comment_UserTempId = value;
                    OnComment_UserTempIdChanged();
                }
            }
        }
        
        private Nullable<int> _Comment_TempId;

        /// <summary>
        /// Gets or sets the Comment_TempId column value.
        /// </summary>
        [Column(Name="Comment_TempId", Storage="_Comment_TempId", DbType="Int")]
        public Nullable<int> Comment_TempId
        {
            get { return _Comment_TempId; }
            set
            {
                if (_Comment_TempId != value)
                {
                    OnComment_TempIdChanging(value);
                    _Comment_TempId = value;
                    OnComment_TempIdChanged();
                }
            }
        }
        
        private string _Comment_UserTempName;

        /// <summary>
        /// Gets or sets the Comment_UserTempName column value.
        /// </summary>
        [Column(Name="Comment_UserTempName", Storage="_Comment_UserTempName", DbType="NVarChar(50)")]
        public string Comment_UserTempName
        {
            get { return _Comment_UserTempName; }
            set
            {
                if (_Comment_UserTempName != value)
                {
                    OnComment_UserTempNameChanging(value);
                    _Comment_UserTempName = value;
                    OnComment_UserTempNameChanged();
                }
            }
        }
        
        private string _Comment_GuestName;

        /// <summary>
        /// Gets or sets the Comment_GuestName column value.
        /// </summary>
        [Column(Name="Comment_GuestName", Storage="_Comment_GuestName", DbType="NVarChar(20)")]
        public string Comment_GuestName
        {
            get { return _Comment_GuestName; }
            set
            {
                if (_Comment_GuestName != value)
                {
                    OnComment_GuestNameChanging(value);
                    _Comment_GuestName = value;
                    OnComment_GuestNameChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Comment_Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_IdChanging(int value);
        /// <summary>Called after Comment_Id has Changed.</summary>
        partial void OnComment_IdChanged();
        /// <summary>Called when Comment_UserId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_UserIdChanging(Nullable<int> value);
        /// <summary>Called after Comment_UserId has Changed.</summary>
        partial void OnComment_UserIdChanged();
        /// <summary>Called when Comment_LogId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_LogIdChanging(Nullable<int> value);
        /// <summary>Called after Comment_LogId has Changed.</summary>
        partial void OnComment_LogIdChanged();
        /// <summary>Called when Comment_Content is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_ContentChanging(string value);
        /// <summary>Called after Comment_Content has Changed.</summary>
        partial void OnComment_ContentChanged();
        /// <summary>Called when Comment_ToCommentId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_ToCommentIdChanging(Nullable<int> value);
        /// <summary>Called after Comment_ToCommentId has Changed.</summary>
        partial void OnComment_ToCommentIdChanged();
        /// <summary>Called when Comment_CreateTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_CreateTimeChanging(Nullable<System.DateTime> value);
        /// <summary>Called after Comment_CreateTime has Changed.</summary>
        partial void OnComment_CreateTimeChanged();
        /// <summary>Called when Comment_LastModiTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_LastModiTimeChanging(Nullable<System.DateTime> value);
        /// <summary>Called after Comment_LastModiTime has Changed.</summary>
        partial void OnComment_LastModiTimeChanged();
        /// <summary>Called when Comment_LogTempId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_LogTempIdChanging(Nullable<int> value);
        /// <summary>Called after Comment_LogTempId has Changed.</summary>
        partial void OnComment_LogTempIdChanged();
        /// <summary>Called when Comment_UserTempId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_UserTempIdChanging(Nullable<int> value);
        /// <summary>Called after Comment_UserTempId has Changed.</summary>
        partial void OnComment_UserTempIdChanged();
        /// <summary>Called when Comment_TempId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_TempIdChanging(Nullable<int> value);
        /// <summary>Called after Comment_TempId has Changed.</summary>
        partial void OnComment_TempIdChanged();
        /// <summary>Called when Comment_UserTempName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_UserTempNameChanging(string value);
        /// <summary>Called after Comment_UserTempName has Changed.</summary>
        partial void OnComment_UserTempNameChanged();
        /// <summary>Called when Comment_GuestName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_GuestNameChanging(string value);
        /// <summary>Called after Comment_GuestName has Changed.</summary>
        partial void OnComment_GuestNameChanged();
        #endregion
        
    }
}

