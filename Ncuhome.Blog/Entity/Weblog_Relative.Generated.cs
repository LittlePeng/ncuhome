
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace Ncuhome.Blog.Entity 
{
    /// <summary>
    /// The class representing the dbo.Weblog_Relative table.
    /// </summary>
    [Table(Name="dbo.Weblog_Relative")]
    public partial class Weblog_Relative
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Weblog_Relative"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Weblog_Relative()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private int _Relative_Id = default(int);

        /// <summary>
        /// Gets the Relative_Id column value.
        /// </summary>
        [Column(Name="Relative_Id", Storage="_Relative_Id", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public int Relative_Id
        {
            get { return _Relative_Id; }
            set
            {
                if (_Relative_Id != value)
                {
                    OnRelative_IdChanging(value);
                    _Relative_Id = value;
                    OnRelative_IdChanged();
                }
            }
        }
        
        private int _Relative_UserId;

        /// <summary>
        /// Gets or sets the Relative_UserId column value.
        /// </summary>
        [Column(Name="Relative_UserId", Storage="_Relative_UserId", DbType="Int NOT NULL", CanBeNull=false)]
        public int Relative_UserId
        {
            get { return _Relative_UserId; }
            set
            {
                if (_Relative_UserId != value)
                {
                    OnRelative_UserIdChanging(value);
                    _Relative_UserId = value;
                    OnRelative_UserIdChanged();
                }
            }
        }
        
        private int _Relative_LogId;

        /// <summary>
        /// Gets or sets the Relative_LogId column value.
        /// </summary>
        [Column(Name="Relative_LogId", Storage="_Relative_LogId", DbType="Int NOT NULL", CanBeNull=false)]
        public int Relative_LogId
        {
            get { return _Relative_LogId; }
            set
            {
                if (_Relative_LogId != value)
                {
                    OnRelative_LogIdChanging(value);
                    _Relative_LogId = value;
                    OnRelative_LogIdChanged();
                }
            }
        }
        
        private System.DateTime _Relative_CreateTime;

        /// <summary>
        /// Gets or sets the Relative_CreateTime column value.
        /// </summary>
        [Column(Name="Relative_CreateTime", Storage="_Relative_CreateTime", DbType="DateTime NOT NULL", CanBeNull=false)]
        public System.DateTime Relative_CreateTime
        {
            get { return _Relative_CreateTime; }
            set
            {
                if (_Relative_CreateTime != value)
                {
                    OnRelative_CreateTimeChanging(value);
                    _Relative_CreateTime = value;
                    OnRelative_CreateTimeChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Relative_Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnRelative_IdChanging(int value);
        /// <summary>Called after Relative_Id has Changed.</summary>
        partial void OnRelative_IdChanged();
        /// <summary>Called when Relative_UserId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnRelative_UserIdChanging(int value);
        /// <summary>Called after Relative_UserId has Changed.</summary>
        partial void OnRelative_UserIdChanged();
        /// <summary>Called when Relative_LogId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnRelative_LogIdChanging(int value);
        /// <summary>Called after Relative_LogId has Changed.</summary>
        partial void OnRelative_LogIdChanged();
        /// <summary>Called when Relative_CreateTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnRelative_CreateTimeChanging(System.DateTime value);
        /// <summary>Called after Relative_CreateTime has Changed.</summary>
        partial void OnRelative_CreateTimeChanged();
        #endregion
        
    }
}

