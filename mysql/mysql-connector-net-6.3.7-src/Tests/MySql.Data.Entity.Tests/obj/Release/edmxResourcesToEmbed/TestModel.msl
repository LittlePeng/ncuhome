<?xml version="1.0" encoding="utf-8"?>
<Mapping xmlns="urn:schemas-microsoft-com:windows:storage:mapping:CS" Space="C-S">
  <Alias Key="Model" Value="testModel" />
  <Alias Key="Target" Value="testModel.Store" />
  <EntityContainerMapping CdmEntityContainer="testEntities" StorageEntityContainer="testContainer">
    <!--		<EntitySetMapping Name="Employee">
			<EntityTypeMapping TypeName="TestDB.Employee">
				<MappingFragment StoreEntitySet="Employees" >
					<ScalarProperty Name="Id" ColumnName="Id" />
					<ScalarProperty Name="LastName" ColumnName="LastName" />
					<ScalarProperty Name="FirstName" ColumnName="FirstName" />
				</MappingFragment>
			</EntityTypeMapping>
		</EntitySetMapping>-->
    <EntitySetMapping Name="Employees">
      <!-- 
      The IsTypeOf keyword tells the mapping that the following mapping applies to all subtypes of 
      the given Type (in this case, SalariedEmployee as well as Employee)
      -->
      <EntityTypeMapping TypeName="IsTypeOf(testModel.Employee)">
        <MappingFragment StoreEntitySet="Employees">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="LastName" ColumnName="LastName" />
          <ScalarProperty Name="FirstName" ColumnName="FirstName" />
          <ScalarProperty Name="Age" ColumnName="Age" />
        </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="testModel.SalariedEmployee">
        <MappingFragment StoreEntitySet="SalariedEmployees">
          <ScalarProperty Name="Id" ColumnName="EmployeeId" />
          <ScalarProperty Name="Salary" ColumnName="Salary" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Children">
      <EntityTypeMapping TypeName="testModel.Child">
        <MappingFragment StoreEntitySet="EmployeeChildren">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="EmployeeID" ColumnName="EmployeeID" />
          <ScalarProperty Name="LastName" ColumnName="LastName" />
          <ScalarProperty Name="FirstName" ColumnName="FirstName" />
          <ScalarProperty Name="BirthTime" ColumnName="BirthTime" />
          <ScalarProperty Name="BirthWeight" ColumnName="Weight" />
          <ScalarProperty Name="Modified" ColumnName="LastModified" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Companies" StoreEntitySet="Companies" TypeName="testModel.Company">
      <ScalarProperty Name="Id" ColumnName="Id" />
      <ScalarProperty Name="Name" ColumnName="Name" />
      <ScalarProperty Name="DateBegan" ColumnName="DateBegan" />
      <ScalarProperty Name="NumEmployees" ColumnName="NumEmployees" />
      <ComplexProperty Name="Address" TypeName="testModel.CommonAddress">
        <ScalarProperty Name="Address" ColumnName="Address" />
        <ScalarProperty Name="City" ColumnName="City" />
        <ScalarProperty Name="State" ColumnName="State" />
        <ScalarProperty Name="ZipCode" ColumnName="ZipCode" />
      </ComplexProperty>
    </EntitySetMapping>
    <EntitySetMapping Name="Toys">
      <EntityTypeMapping TypeName="testModel.Toy">
        <MappingFragment StoreEntitySet="Toys">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Name" ColumnName="Name" />
          <ScalarProperty Name="MinAge" ColumnName="MinAge" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="FK_Toys_Supplier" TypeName="testModel.FK_Toys_Supplier" StoreEntitySet="Toys">
      <EndProperty Name="Supplier">
        <ScalarProperty Name="Id" ColumnName="SupplierId" />
      </EndProperty>
      <EndProperty Name="Toys">
        <ScalarProperty Name="Id" ColumnName="Id" />
      </EndProperty>
    </AssociationSetMapping>
    <EntitySetMapping Name="Stores">
      <EntityTypeMapping TypeName="testModel.Store">
        <MappingFragment StoreEntitySet="Stores">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Name" ColumnName="Name" />
          <ScalarProperty Name="Address" ColumnName="Address" />
          <ScalarProperty Name="City" ColumnName="City" />
          <ScalarProperty Name="State" ColumnName="State" />
          <ScalarProperty Name="ZipCode" ColumnName="ZipCode" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Orders">
      <EntityTypeMapping TypeName="testModel.Order">
        <MappingFragment StoreEntitySet="Orders">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Freight" ColumnName="Freight" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="FK_Orders_Store" TypeName="testModel.FK_Orders_Store" StoreEntitySet="Orders">
      <EndProperty Name="Store">
        <ScalarProperty Name="Id" ColumnName="StoreId" />
      </EndProperty>
      <EndProperty Name="Orders">
        <ScalarProperty Name="Id" ColumnName="Id" />
      </EndProperty>
      <Condition ColumnName="StoreId" IsNull="false" />
    </AssociationSetMapping>
    <EntitySetMapping Name="Books">
      <EntityTypeMapping TypeName="testModel.Book">
        <MappingFragment StoreEntitySet="Books">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Name" ColumnName="Name" />
          <ScalarProperty Name="Pages" ColumnName="Pages" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Authors">
      <EntityTypeMapping TypeName="IsTypeOf(testModel.Author)">
        <MappingFragment StoreEntitySet="Authors">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Name" ColumnName="Name" />
          <ScalarProperty Name="Age" ColumnName="Age" />
        </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="testModel.Author">
        <ModificationFunctionMapping>
          <InsertFunction FunctionName="testModel.Store.AddAuthor">
            <ScalarProperty Name="Age" ParameterName="theage" />
            <ScalarProperty Name="Name" ParameterName="thename" />
            <ScalarProperty Name="Id" ParameterName="theid" />
          </InsertFunction>
          <UpdateFunction FunctionName="testModel.Store.UpdateAuthor">
            <ScalarProperty Name="Age" ParameterName="theage" Version="Current" />
            <ScalarProperty Name="Name" ParameterName="thename" Version="Current" />
            <ScalarProperty Name="Id" ParameterName="theid" Version="Current" />
          </UpdateFunction>
          <DeleteFunction FunctionName="testModel.Store.DeleteAuthor">
            <ScalarProperty Name="Id" ParameterName="theid" />
          </DeleteFunction>
        </ModificationFunctionMapping>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Publishers">
      <EntityTypeMapping TypeName="testModel.Publisher">
        <MappingFragment StoreEntitySet="Publishers">
          <ScalarProperty Name="id" ColumnName="id" />
          <ScalarProperty Name="name" ColumnName="name" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="FK_Books_Authors" TypeName="testModel.FK_Books_Authors" StoreEntitySet="Books">
      <EndProperty Name="Authors">
        <ScalarProperty Name="Id" ColumnName="Author_id" />
      </EndProperty>
      <EndProperty Name="Books">
        <ScalarProperty Name="Id" ColumnName="Id" />
      </EndProperty>
    </AssociationSetMapping>
    <AssociationSetMapping Name="FK_Books_Publishers" TypeName="testModel.FK_Books_Publishers" StoreEntitySet="Books">
      <EndProperty Name="Publishers">
        <ScalarProperty Name="id" ColumnName="Publisher_id" />
      </EndProperty>
      <EndProperty Name="Books">
        <ScalarProperty Name="Id" ColumnName="Id" />
      </EndProperty>
    </AssociationSetMapping>
    <EntitySetMapping Name="DataTypeTests">
      <EntityTypeMapping TypeName="testModel.DataTypeTest">
        <MappingFragment StoreEntitySet="DataTypeTests">
          <ScalarProperty Name="id" ColumnName="id" />
          <ScalarProperty Name="id2" ColumnName="id2" />
          <ScalarProperty Name="idAsChar" ColumnName="idAsChar" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Computers">
      <EntityTypeMapping TypeName="IsTypeOf(testModel.Computer)">
        <MappingFragment StoreEntitySet="Computers">
          <ScalarProperty Name="Brand" ColumnName="Brand" />
          <ScalarProperty Name="Id" ColumnName="Id" />
        </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(testModel.DesktopComputer)">
        <MappingFragment StoreEntitySet="DesktopComputers">
          <ScalarProperty Name="Id" ColumnName="IdDesktopComputer" />
          <ScalarProperty Name="Color" ColumnName="Color" />
        </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(testModel.LaptopComputer)">
        <MappingFragment StoreEntitySet="LaptopComputers">
          <ScalarProperty Name="Id" ColumnName="IdLaptopComputer" />
          <ScalarProperty Name="IsCertified" ColumnName="IsCertified" />
          <ScalarProperty Name="Size" ColumnName="Size" />
        </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(testModel.TabletComputer)">
        <MappingFragment StoreEntitySet="TabletComputers">
          <ScalarProperty Name="Id" ColumnName="IdTabletComputer" />
          <ScalarProperty Name="IsAvailable" ColumnName="IsAvailable" />
          <ScalarProperty Name="ReleaseDate" ColumnName="ReleaseDate" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
  </EntityContainerMapping>
</Mapping>