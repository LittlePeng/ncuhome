
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace Ncuhome.Blog.Entity 
{
    /// <summary>
    /// The class representing the dbo.View_GetCommentInforByLogId table.
    /// </summary>
    [Table(Name="dbo.View_GetCommentInforByLogId")]
    public partial class View_GetCommentInforByLogId
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="View_GetCommentInforByLogId"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public View_GetCommentInforByLogId()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private int _Log_Id;

        /// <summary>
        /// Gets or sets the Log_Id column value.
        /// </summary>
        [Column(Name="Log_Id", Storage="_Log_Id", DbType="Int NOT NULL", CanBeNull=false)]
        public int Log_Id
        {
            get { return _Log_Id; }
            set
            {
                if (_Log_Id != value)
                {
                    OnLog_IdChanging(value);
                    _Log_Id = value;
                    OnLog_IdChanged();
                }
            }
        }
        
        private Nullable<int> _User_TxzId;

        /// <summary>
        /// Gets or sets the User_TxzId column value.
        /// </summary>
        [Column(Name="User_TxzId", Storage="_User_TxzId", DbType="Int")]
        public Nullable<int> User_TxzId
        {
            get { return _User_TxzId; }
            set
            {
                if (_User_TxzId != value)
                {
                    OnUser_TxzIdChanging(value);
                    _User_TxzId = value;
                    OnUser_TxzIdChanged();
                }
            }
        }
        
        private string _User_NickName;

        /// <summary>
        /// Gets or sets the User_NickName column value.
        /// </summary>
        [Column(Name="User_NickName", Storage="_User_NickName", DbType="NVarChar(50)")]
        public string User_NickName
        {
            get { return _User_NickName; }
            set
            {
                if (_User_NickName != value)
                {
                    OnUser_NickNameChanging(value);
                    _User_NickName = value;
                    OnUser_NickNameChanged();
                }
            }
        }
        
        private System.DateTime _Comment_CreateTime;

        /// <summary>
        /// Gets or sets the Comment_CreateTime column value.
        /// </summary>
        [Column(Name="Comment_CreateTime", Storage="_Comment_CreateTime", DbType="DateTime NOT NULL", CanBeNull=false)]
        public System.DateTime Comment_CreateTime
        {
            get { return _Comment_CreateTime; }
            set
            {
                if (_Comment_CreateTime != value)
                {
                    OnComment_CreateTimeChanging(value);
                    _Comment_CreateTime = value;
                    OnComment_CreateTimeChanged();
                }
            }
        }
        
        private string _Comment_Content;

        /// <summary>
        /// Gets or sets the Comment_Content column value.
        /// </summary>
        [Column(Name="Comment_Content", Storage="_Comment_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
        public string Comment_Content
        {
            get { return _Comment_Content; }
            set
            {
                if (_Comment_Content != value)
                {
                    OnComment_ContentChanging(value);
                    _Comment_Content = value;
                    OnComment_ContentChanged();
                }
            }
        }
        
        private Nullable<int> _Comment_ToCommentId;

        /// <summary>
        /// Gets or sets the Comment_ToCommentId column value.
        /// </summary>
        [Column(Name="Comment_ToCommentId", Storage="_Comment_ToCommentId", DbType="Int")]
        public Nullable<int> Comment_ToCommentId
        {
            get { return _Comment_ToCommentId; }
            set
            {
                if (_Comment_ToCommentId != value)
                {
                    OnComment_ToCommentIdChanging(value);
                    _Comment_ToCommentId = value;
                    OnComment_ToCommentIdChanged();
                }
            }
        }
        
        private Nullable<int> _User_FIID;

        /// <summary>
        /// Gets or sets the User_FIID column value.
        /// </summary>
        [Column(Name="User_FIID", Storage="_User_FIID", DbType="Int")]
        public Nullable<int> User_FIID
        {
            get { return _User_FIID; }
            set
            {
                if (_User_FIID != value)
                {
                    OnUser_FIIDChanging(value);
                    _User_FIID = value;
                    OnUser_FIIDChanged();
                }
            }
        }
        
        private int _Comment_UserId;

        /// <summary>
        /// Gets or sets the Comment_UserId column value.
        /// </summary>
        [Column(Name="Comment_UserId", Storage="_Comment_UserId", DbType="Int NOT NULL", CanBeNull=false)]
        public int Comment_UserId
        {
            get { return _Comment_UserId; }
            set
            {
                if (_Comment_UserId != value)
                {
                    OnComment_UserIdChanging(value);
                    _Comment_UserId = value;
                    OnComment_UserIdChanged();
                }
            }
        }
        
        private int _Comment_Id;

        /// <summary>
        /// Gets or sets the Comment_Id column value.
        /// </summary>
        [Column(Name="Comment_Id", Storage="_Comment_Id", DbType="Int NOT NULL", CanBeNull=false)]
        public int Comment_Id
        {
            get { return _Comment_Id; }
            set
            {
                if (_Comment_Id != value)
                {
                    OnComment_IdChanging(value);
                    _Comment_Id = value;
                    OnComment_IdChanged();
                }
            }
        }
        
        private Nullable<int> _Log_UserId;

        /// <summary>
        /// Gets or sets the Log_UserId column value.
        /// </summary>
        [Column(Name="Log_UserId", Storage="_Log_UserId", DbType="Int")]
        public Nullable<int> Log_UserId
        {
            get { return _Log_UserId; }
            set
            {
                if (_Log_UserId != value)
                {
                    OnLog_UserIdChanging(value);
                    _Log_UserId = value;
                    OnLog_UserIdChanged();
                }
            }
        }
        
        private string _User_PortraitUrl;

        /// <summary>
        /// Gets or sets the User_PortraitUrl column value.
        /// </summary>
        [Column(Name="User_PortraitUrl", Storage="_User_PortraitUrl", DbType="NVarChar(50)")]
        public string User_PortraitUrl
        {
            get { return _User_PortraitUrl; }
            set
            {
                if (_User_PortraitUrl != value)
                {
                    OnUser_PortraitUrlChanging(value);
                    _User_PortraitUrl = value;
                    OnUser_PortraitUrlChanged();
                }
            }
        }
        
        private string _Log_Title;

        /// <summary>
        /// Gets or sets the Log_Title column value.
        /// </summary>
        [Column(Name="Log_Title", Storage="_Log_Title", DbType="NVarChar(255)")]
        public string Log_Title
        {
            get { return _Log_Title; }
            set
            {
                if (_Log_Title != value)
                {
                    OnLog_TitleChanging(value);
                    _Log_Title = value;
                    OnLog_TitleChanged();
                }
            }
        }
        
        private Nullable<bool> _Log_IsVisible;

        /// <summary>
        /// Gets or sets the Log_IsVisible column value.
        /// </summary>
        [Column(Name="Log_IsVisible", Storage="_Log_IsVisible", DbType="Bit")]
        public Nullable<bool> Log_IsVisible
        {
            get { return _Log_IsVisible; }
            set
            {
                if (_Log_IsVisible != value)
                {
                    OnLog_IsVisibleChanging(value);
                    _Log_IsVisible = value;
                    OnLog_IsVisibleChanged();
                }
            }
        }
        
        private Nullable<bool> _Log_IsDraft;

        /// <summary>
        /// Gets or sets the Log_IsDraft column value.
        /// </summary>
        [Column(Name="Log_IsDraft", Storage="_Log_IsDraft", DbType="Bit")]
        public Nullable<bool> Log_IsDraft
        {
            get { return _Log_IsDraft; }
            set
            {
                if (_Log_IsDraft != value)
                {
                    OnLog_IsDraftChanging(value);
                    _Log_IsDraft = value;
                    OnLog_IsDraftChanged();
                }
            }
        }
        
        private string _User_DomainName;

        /// <summary>
        /// Gets or sets the User_DomainName column value.
        /// </summary>
        [Column(Name="User_DomainName", Storage="_User_DomainName", DbType="NVarChar(20)")]
        public string User_DomainName
        {
            get { return _User_DomainName; }
            set
            {
                if (_User_DomainName != value)
                {
                    OnUser_DomainNameChanging(value);
                    _User_DomainName = value;
                    OnUser_DomainNameChanged();
                }
            }
        }
        
        private string _User_Name;

        /// <summary>
        /// Gets or sets the User_Name column value.
        /// </summary>
        [Column(Name="User_Name", Storage="_User_Name", DbType="NVarChar(50)")]
        public string User_Name
        {
            get { return _User_Name; }
            set
            {
                if (_User_Name != value)
                {
                    OnUser_NameChanging(value);
                    _User_Name = value;
                    OnUser_NameChanged();
                }
            }
        }
        
        private Nullable<int> _User_BeViewCount;

        /// <summary>
        /// Gets or sets the User_BeViewCount column value.
        /// </summary>
        [Column(Name="User_BeViewCount", Storage="_User_BeViewCount", DbType="Int")]
        public Nullable<int> User_BeViewCount
        {
            get { return _User_BeViewCount; }
            set
            {
                if (_User_BeViewCount != value)
                {
                    OnUser_BeViewCountChanging(value);
                    _User_BeViewCount = value;
                    OnUser_BeViewCountChanged();
                }
            }
        }
        
        private Nullable<int> _User_MessageCount;

        /// <summary>
        /// Gets or sets the User_MessageCount column value.
        /// </summary>
        [Column(Name="User_MessageCount", Storage="_User_MessageCount", DbType="Int")]
        public Nullable<int> User_MessageCount
        {
            get { return _User_MessageCount; }
            set
            {
                if (_User_MessageCount != value)
                {
                    OnUser_MessageCountChanging(value);
                    _User_MessageCount = value;
                    OnUser_MessageCountChanged();
                }
            }
        }
        
        private string _User_Number;

        /// <summary>
        /// Gets or sets the User_Number column value.
        /// </summary>
        [Column(Name="User_Number", Storage="_User_Number", DbType="NVarChar(MAX)")]
        public string User_Number
        {
            get { return _User_Number; }
            set
            {
                if (_User_Number != value)
                {
                    OnUser_NumberChanging(value);
                    _User_Number = value;
                    OnUser_NumberChanged();
                }
            }
        }
        
        private Nullable<int> _User_LoginTimes;

        /// <summary>
        /// Gets or sets the User_LoginTimes column value.
        /// </summary>
        [Column(Name="User_LoginTimes", Storage="_User_LoginTimes", DbType="Int")]
        public Nullable<int> User_LoginTimes
        {
            get { return _User_LoginTimes; }
            set
            {
                if (_User_LoginTimes != value)
                {
                    OnUser_LoginTimesChanging(value);
                    _User_LoginTimes = value;
                    OnUser_LoginTimesChanged();
                }
            }
        }
        
        private System.DateTime _User_CreateTime;

        /// <summary>
        /// Gets or sets the User_CreateTime column value.
        /// </summary>
        [Column(Name="User_CreateTime", Storage="_User_CreateTime", DbType="DateTime NOT NULL", CanBeNull=false)]
        public System.DateTime User_CreateTime
        {
            get { return _User_CreateTime; }
            set
            {
                if (_User_CreateTime != value)
                {
                    OnUser_CreateTimeChanging(value);
                    _User_CreateTime = value;
                    OnUser_CreateTimeChanged();
                }
            }
        }
        
        private Nullable<bool> _User_IsPrivate;

        /// <summary>
        /// Gets or sets the User_IsPrivate column value.
        /// </summary>
        [Column(Name="User_IsPrivate", Storage="_User_IsPrivate", DbType="Bit")]
        public Nullable<bool> User_IsPrivate
        {
            get { return _User_IsPrivate; }
            set
            {
                if (_User_IsPrivate != value)
                {
                    OnUser_IsPrivateChanging(value);
                    _User_IsPrivate = value;
                    OnUser_IsPrivateChanged();
                }
            }
        }
        
        private Nullable<int> _User_CommentCount;

        /// <summary>
        /// Gets or sets the User_CommentCount column value.
        /// </summary>
        [Column(Name="User_CommentCount", Storage="_User_CommentCount", DbType="Int")]
        public Nullable<int> User_CommentCount
        {
            get { return _User_CommentCount; }
            set
            {
                if (_User_CommentCount != value)
                {
                    OnUser_CommentCountChanging(value);
                    _User_CommentCount = value;
                    OnUser_CommentCountChanged();
                }
            }
        }
        
        private Nullable<int> _User_LogCount;

        /// <summary>
        /// Gets or sets the User_LogCount column value.
        /// </summary>
        [Column(Name="User_LogCount", Storage="_User_LogCount", DbType="Int")]
        public Nullable<int> User_LogCount
        {
            get { return _User_LogCount; }
            set
            {
                if (_User_LogCount != value)
                {
                    OnUser_LogCountChanging(value);
                    _User_LogCount = value;
                    OnUser_LogCountChanged();
                }
            }
        }
        
        private Nullable<int> _Log_CommentCount;

        /// <summary>
        /// Gets or sets the Log_CommentCount column value.
        /// </summary>
        [Column(Name="Log_CommentCount", Storage="_Log_CommentCount", DbType="Int")]
        public Nullable<int> Log_CommentCount
        {
            get { return _Log_CommentCount; }
            set
            {
                if (_Log_CommentCount != value)
                {
                    OnLog_CommentCountChanging(value);
                    _Log_CommentCount = value;
                    OnLog_CommentCountChanged();
                }
            }
        }
        
        private Nullable<int> _Log_RecommendCount;

        /// <summary>
        /// Gets or sets the Log_RecommendCount column value.
        /// </summary>
        [Column(Name="Log_RecommendCount", Storage="_Log_RecommendCount", DbType="Int")]
        public Nullable<int> Log_RecommendCount
        {
            get { return _Log_RecommendCount; }
            set
            {
                if (_Log_RecommendCount != value)
                {
                    OnLog_RecommendCountChanging(value);
                    _Log_RecommendCount = value;
                    OnLog_RecommendCountChanged();
                }
            }
        }
        
        private Nullable<int> _Log_ViewCount;

        /// <summary>
        /// Gets or sets the Log_ViewCount column value.
        /// </summary>
        [Column(Name="Log_ViewCount", Storage="_Log_ViewCount", DbType="Int")]
        public Nullable<int> Log_ViewCount
        {
            get { return _Log_ViewCount; }
            set
            {
                if (_Log_ViewCount != value)
                {
                    OnLog_ViewCountChanging(value);
                    _Log_ViewCount = value;
                    OnLog_ViewCountChanged();
                }
            }
        }
        
        private System.DateTime _Log_CreateTime;

        /// <summary>
        /// Gets or sets the Log_CreateTime column value.
        /// </summary>
        [Column(Name="Log_CreateTime", Storage="_Log_CreateTime", DbType="DateTime NOT NULL", CanBeNull=false)]
        public System.DateTime Log_CreateTime
        {
            get { return _Log_CreateTime; }
            set
            {
                if (_Log_CreateTime != value)
                {
                    OnLog_CreateTimeChanging(value);
                    _Log_CreateTime = value;
                    OnLog_CreateTimeChanged();
                }
            }
        }
        
        private string _Log_Content;

        /// <summary>
        /// Gets or sets the Log_Content column value.
        /// </summary>
        [Column(Name="Log_Content", Storage="_Log_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
        public string Log_Content
        {
            get { return _Log_Content; }
            set
            {
                if (_Log_Content != value)
                {
                    OnLog_ContentChanging(value);
                    _Log_Content = value;
                    OnLog_ContentChanged();
                }
            }
        }
        
        private Nullable<bool> _Log_IsEnRePly;

        /// <summary>
        /// Gets or sets the Log_IsEnRePly column value.
        /// </summary>
        [Column(Name="Log_IsEnRePly", Storage="_Log_IsEnRePly", DbType="Bit")]
        public Nullable<bool> Log_IsEnRePly
        {
            get { return _Log_IsEnRePly; }
            set
            {
                if (_Log_IsEnRePly != value)
                {
                    OnLog_IsEnRePlyChanging(value);
                    _Log_IsEnRePly = value;
                    OnLog_IsEnRePlyChanged();
                }
            }
        }
        
        private Nullable<bool> _Log_IsTop;

        /// <summary>
        /// Gets or sets the Log_IsTop column value.
        /// </summary>
        [Column(Name="Log_IsTop", Storage="_Log_IsTop", DbType="Bit")]
        public Nullable<bool> Log_IsTop
        {
            get { return _Log_IsTop; }
            set
            {
                if (_Log_IsTop != value)
                {
                    OnLog_IsTopChanging(value);
                    _Log_IsTop = value;
                    OnLog_IsTopChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Log_Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IdChanging(int value);
        /// <summary>Called after Log_Id has Changed.</summary>
        partial void OnLog_IdChanged();
        /// <summary>Called when User_TxzId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_TxzIdChanging(Nullable<int> value);
        /// <summary>Called after User_TxzId has Changed.</summary>
        partial void OnUser_TxzIdChanged();
        /// <summary>Called when User_NickName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_NickNameChanging(string value);
        /// <summary>Called after User_NickName has Changed.</summary>
        partial void OnUser_NickNameChanged();
        /// <summary>Called when Comment_CreateTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_CreateTimeChanging(System.DateTime value);
        /// <summary>Called after Comment_CreateTime has Changed.</summary>
        partial void OnComment_CreateTimeChanged();
        /// <summary>Called when Comment_Content is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_ContentChanging(string value);
        /// <summary>Called after Comment_Content has Changed.</summary>
        partial void OnComment_ContentChanged();
        /// <summary>Called when Comment_ToCommentId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_ToCommentIdChanging(Nullable<int> value);
        /// <summary>Called after Comment_ToCommentId has Changed.</summary>
        partial void OnComment_ToCommentIdChanged();
        /// <summary>Called when User_FIID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_FIIDChanging(Nullable<int> value);
        /// <summary>Called after User_FIID has Changed.</summary>
        partial void OnUser_FIIDChanged();
        /// <summary>Called when Comment_UserId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_UserIdChanging(int value);
        /// <summary>Called after Comment_UserId has Changed.</summary>
        partial void OnComment_UserIdChanged();
        /// <summary>Called when Comment_Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnComment_IdChanging(int value);
        /// <summary>Called after Comment_Id has Changed.</summary>
        partial void OnComment_IdChanged();
        /// <summary>Called when Log_UserId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_UserIdChanging(Nullable<int> value);
        /// <summary>Called after Log_UserId has Changed.</summary>
        partial void OnLog_UserIdChanged();
        /// <summary>Called when User_PortraitUrl is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_PortraitUrlChanging(string value);
        /// <summary>Called after User_PortraitUrl has Changed.</summary>
        partial void OnUser_PortraitUrlChanged();
        /// <summary>Called when Log_Title is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_TitleChanging(string value);
        /// <summary>Called after Log_Title has Changed.</summary>
        partial void OnLog_TitleChanged();
        /// <summary>Called when Log_IsVisible is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IsVisibleChanging(Nullable<bool> value);
        /// <summary>Called after Log_IsVisible has Changed.</summary>
        partial void OnLog_IsVisibleChanged();
        /// <summary>Called when Log_IsDraft is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IsDraftChanging(Nullable<bool> value);
        /// <summary>Called after Log_IsDraft has Changed.</summary>
        partial void OnLog_IsDraftChanged();
        /// <summary>Called when User_DomainName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_DomainNameChanging(string value);
        /// <summary>Called after User_DomainName has Changed.</summary>
        partial void OnUser_DomainNameChanged();
        /// <summary>Called when User_Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_NameChanging(string value);
        /// <summary>Called after User_Name has Changed.</summary>
        partial void OnUser_NameChanged();
        /// <summary>Called when User_BeViewCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_BeViewCountChanging(Nullable<int> value);
        /// <summary>Called after User_BeViewCount has Changed.</summary>
        partial void OnUser_BeViewCountChanged();
        /// <summary>Called when User_MessageCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_MessageCountChanging(Nullable<int> value);
        /// <summary>Called after User_MessageCount has Changed.</summary>
        partial void OnUser_MessageCountChanged();
        /// <summary>Called when User_Number is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_NumberChanging(string value);
        /// <summary>Called after User_Number has Changed.</summary>
        partial void OnUser_NumberChanged();
        /// <summary>Called when User_LoginTimes is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_LoginTimesChanging(Nullable<int> value);
        /// <summary>Called after User_LoginTimes has Changed.</summary>
        partial void OnUser_LoginTimesChanged();
        /// <summary>Called when User_CreateTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_CreateTimeChanging(System.DateTime value);
        /// <summary>Called after User_CreateTime has Changed.</summary>
        partial void OnUser_CreateTimeChanged();
        /// <summary>Called when User_IsPrivate is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_IsPrivateChanging(Nullable<bool> value);
        /// <summary>Called after User_IsPrivate has Changed.</summary>
        partial void OnUser_IsPrivateChanged();
        /// <summary>Called when User_CommentCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_CommentCountChanging(Nullable<int> value);
        /// <summary>Called after User_CommentCount has Changed.</summary>
        partial void OnUser_CommentCountChanged();
        /// <summary>Called when User_LogCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_LogCountChanging(Nullable<int> value);
        /// <summary>Called after User_LogCount has Changed.</summary>
        partial void OnUser_LogCountChanged();
        /// <summary>Called when Log_CommentCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_CommentCountChanging(Nullable<int> value);
        /// <summary>Called after Log_CommentCount has Changed.</summary>
        partial void OnLog_CommentCountChanged();
        /// <summary>Called when Log_RecommendCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_RecommendCountChanging(Nullable<int> value);
        /// <summary>Called after Log_RecommendCount has Changed.</summary>
        partial void OnLog_RecommendCountChanged();
        /// <summary>Called when Log_ViewCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_ViewCountChanging(Nullable<int> value);
        /// <summary>Called after Log_ViewCount has Changed.</summary>
        partial void OnLog_ViewCountChanged();
        /// <summary>Called when Log_CreateTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_CreateTimeChanging(System.DateTime value);
        /// <summary>Called after Log_CreateTime has Changed.</summary>
        partial void OnLog_CreateTimeChanged();
        /// <summary>Called when Log_Content is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_ContentChanging(string value);
        /// <summary>Called after Log_Content has Changed.</summary>
        partial void OnLog_ContentChanged();
        /// <summary>Called when Log_IsEnRePly is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IsEnRePlyChanging(Nullable<bool> value);
        /// <summary>Called after Log_IsEnRePly has Changed.</summary>
        partial void OnLog_IsEnRePlyChanged();
        /// <summary>Called when Log_IsTop is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IsTopChanging(Nullable<bool> value);
        /// <summary>Called after Log_IsTop has Changed.</summary>
        partial void OnLog_IsTopChanged();
        #endregion
        
    }
}

