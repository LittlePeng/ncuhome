
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace Ncuhome.Blog.Entity 
{
    /// <summary>
    /// The class representing the dbo.View_GetUserNickNameByLogId table.
    /// </summary>
    [Table(Name="dbo.View_GetUserNickNameByLogId")]
    public partial class View_GetUserNickNameByLogId
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="View_GetUserNickNameByLogId"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public View_GetUserNickNameByLogId()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private string _User_NickName;

        /// <summary>
        /// Gets or sets the User_NickName column value.
        /// </summary>
        [Column(Name="User_NickName", Storage="_User_NickName", DbType="NVarChar(50)")]
        public string User_NickName
        {
            get { return _User_NickName; }
            set
            {
                if (_User_NickName != value)
                {
                    OnUser_NickNameChanging(value);
                    _User_NickName = value;
                    OnUser_NickNameChanged();
                }
            }
        }
        
        private Nullable<int> _Log_UserId;

        /// <summary>
        /// Gets or sets the Log_UserId column value.
        /// </summary>
        [Column(Name="Log_UserId", Storage="_Log_UserId", DbType="Int")]
        public Nullable<int> Log_UserId
        {
            get { return _Log_UserId; }
            set
            {
                if (_Log_UserId != value)
                {
                    OnLog_UserIdChanging(value);
                    _Log_UserId = value;
                    OnLog_UserIdChanged();
                }
            }
        }
        
        private Nullable<int> _User_TxzId;

        /// <summary>
        /// Gets or sets the User_TxzId column value.
        /// </summary>
        [Column(Name="User_TxzId", Storage="_User_TxzId", DbType="Int")]
        public Nullable<int> User_TxzId
        {
            get { return _User_TxzId; }
            set
            {
                if (_User_TxzId != value)
                {
                    OnUser_TxzIdChanging(value);
                    _User_TxzId = value;
                    OnUser_TxzIdChanged();
                }
            }
        }
        
        private int _Log_Id;

        /// <summary>
        /// Gets or sets the Log_Id column value.
        /// </summary>
        [Column(Name="Log_Id", Storage="_Log_Id", DbType="Int NOT NULL", CanBeNull=false)]
        public int Log_Id
        {
            get { return _Log_Id; }
            set
            {
                if (_Log_Id != value)
                {
                    OnLog_IdChanging(value);
                    _Log_Id = value;
                    OnLog_IdChanged();
                }
            }
        }
        
        private string _Log_Title;

        /// <summary>
        /// Gets or sets the Log_Title column value.
        /// </summary>
        [Column(Name="Log_Title", Storage="_Log_Title", DbType="NVarChar(255)")]
        public string Log_Title
        {
            get { return _Log_Title; }
            set
            {
                if (_Log_Title != value)
                {
                    OnLog_TitleChanging(value);
                    _Log_Title = value;
                    OnLog_TitleChanged();
                }
            }
        }
        
        private System.DateTime _Log_CreateTime;

        /// <summary>
        /// Gets or sets the Log_CreateTime column value.
        /// </summary>
        [Column(Name="Log_CreateTime", Storage="_Log_CreateTime", DbType="DateTime NOT NULL", CanBeNull=false)]
        public System.DateTime Log_CreateTime
        {
            get { return _Log_CreateTime; }
            set
            {
                if (_Log_CreateTime != value)
                {
                    OnLog_CreateTimeChanging(value);
                    _Log_CreateTime = value;
                    OnLog_CreateTimeChanged();
                }
            }
        }
        
        private Nullable<int> _Log_Class;

        /// <summary>
        /// Gets or sets the Log_Class column value.
        /// </summary>
        [Column(Name="Log_Class", Storage="_Log_Class", DbType="Int")]
        public Nullable<int> Log_Class
        {
            get { return _Log_Class; }
            set
            {
                if (_Log_Class != value)
                {
                    OnLog_ClassChanging(value);
                    _Log_Class = value;
                    OnLog_ClassChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when User_NickName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_NickNameChanging(string value);
        /// <summary>Called after User_NickName has Changed.</summary>
        partial void OnUser_NickNameChanged();
        /// <summary>Called when Log_UserId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_UserIdChanging(Nullable<int> value);
        /// <summary>Called after Log_UserId has Changed.</summary>
        partial void OnLog_UserIdChanged();
        /// <summary>Called when User_TxzId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUser_TxzIdChanging(Nullable<int> value);
        /// <summary>Called after User_TxzId has Changed.</summary>
        partial void OnUser_TxzIdChanged();
        /// <summary>Called when Log_Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_IdChanging(int value);
        /// <summary>Called after Log_Id has Changed.</summary>
        partial void OnLog_IdChanged();
        /// <summary>Called when Log_Title is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_TitleChanging(string value);
        /// <summary>Called after Log_Title has Changed.</summary>
        partial void OnLog_TitleChanged();
        /// <summary>Called when Log_CreateTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_CreateTimeChanging(System.DateTime value);
        /// <summary>Called after Log_CreateTime has Changed.</summary>
        partial void OnLog_CreateTimeChanged();
        /// <summary>Called when Log_Class is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLog_ClassChanging(Nullable<int> value);
        /// <summary>Called after Log_Class has Changed.</summary>
        partial void OnLog_ClassChanged();
        #endregion
        
    }
}

